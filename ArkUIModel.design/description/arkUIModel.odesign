<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" name="ArkUI" version="12.0.0.2017041100">
  <ownedViewpoints name="GUIModel">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="UI Model Diagram" showOnStartup="true" domainClass="arkUIModel.GUIModel" enablePopupBars="true">
      <metamodel href="../../ArkUIModel.arkUIModel/model/arkUIModel.ecore#/"/>
      <diagramInitialisation>
        <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
          <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.StyleLibray" referenceName="stylelibray">
            <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'stylelibray'"/>
            </subModelOperations>
          </subModelOperations>
          <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.AnimationLibray" referenceName="animationlibray">
            <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'animationlibray'"/>
            </subModelOperations>
          </subModelOperations>
          <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.OperationLibray" referenceName="operationlibray">
            <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
              <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'operationlibray'"/>
              <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.DomainModel" referenceName="DomainModel" variableName="instancedomain"/>
              <subModelOperations xsi:type="tool:SetValue" featureName="domainmodel" valueExpression="aql:instancedomain"/>
            </subModelOperations>
          </subModelOperations>
          <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.UIStruct" referenceName="rootpage"/>
        </firstModelOperations>
      </diagramInitialisation>
      <defaultLayer name="Default">
        <edgeMappings name="operations" sourceMapping="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='GUIModel']" targetMapping="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='OperationLibray']" targetFinderExpression="feature:operationlibray">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="styles" sourceMapping="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='GUIModel']" targetMapping="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']" targetFinderExpression="feature:stylelibray">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="uistructs" sourceMapping="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='GUIModel']" targetMapping="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='UIStruct']" targetFinderExpression="feature:rootpage">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="pages" sourceMapping="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='UIStruct']" targetMapping="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='Page']" targetFinderExpression="feature:page">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='purple']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="routes" sourceMapping="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='Page'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='Page']/@subContainerMappings[name='SubPage'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='Page']/@subContainerMappings[name='SubPage']/@subContainerMappings[name='SubPage']" targetMapping="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='Page'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='Page']/@subContainerMappings[name='SubPage'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='Page']/@subContainerMappings[name='SubPage']/@subContainerMappings[name='SubPage']" targetFinderExpression="feature:pageroute">
          <style lineStyle="dash_dot" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='chocolate']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="Page" deletionDescription="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='PageDelete']" semanticCandidatesExpression="aql:self.rootpage.page->select(ac |ac.eInverse('subpages')->size()==0)" doubleClickDescription="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Page']" synchronizationLock="true" domainClass="arkUIModel.Page" childrenPresentation="VerticalStack">
          <subContainerMappings name="SubPage" semanticCandidatesExpression="aql:self.subpages" doubleClickDescription="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Page']" synchronizationLock="true" domainClass="arkUIModel.Page" childrenPresentation="VerticalStack">
            <subContainerMappings name="SubPage" semanticCandidatesExpression="aql:self.subpages" doubleClickDescription="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='Page']" domainClass="arkUIModel.Page" childrenPresentation="VerticalStack">
              <style xsi:type="style:FlatContainerStyleDescription" arcWidth="50" arcHeight="50" borderSizeComputationExpression="1" labelSize="12" labelExpression="feature:pageTitle" roundedCorner="true" widthComputationExpression="20" heightComputationExpression="10">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_chocolate']"/>
              </style>
            </subContainerMappings>
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="50" arcHeight="50" borderSizeComputationExpression="1" labelSize="12" labelExpression="feature:pageTitle" roundedCorner="true" widthComputationExpression="20" heightComputationExpression="10">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="50" arcHeight="50" borderSizeComputationExpression="1" labelSize="12" labelExpression="feature:pageTitle" roundedCorner="true" widthComputationExpression="20" heightComputationExpression="20">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </containerMappings>
        <containerMappings name="StyleLibray" semanticCandidatesExpression="aql:self.stylelibray" doubleClickDescription="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='StyleLibray']" domainClass="arkUIModel.StyleLibray">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="30" arcHeight="30" borderSizeComputationExpression="1" labelSize="12" labelExpression="样式库" roundedCorner="true">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
          </style>
        </containerMappings>
        <containerMappings name="OperationLibray" semanticCandidatesExpression="aql:self.operationlibray" doubleClickDescription="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='OperationLibray']" domainClass="arkUIModel.OperationLibray">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="30" arcHeight="30" borderSizeComputationExpression="1" labelSize="12" labelExpression="操作库" roundedCorner="true">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
          </style>
        </containerMappings>
        <containerMappings name="GUIModel" semanticCandidatesExpression="aql:self" domainClass="arkUIModel.GUIModel">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="30" arcHeight="30" borderSizeComputationExpression="1" labelSize="12" labelExpression="feature:description" roundedCorner="true">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
          </style>
        </containerMappings>
        <containerMappings name="UIStruct" semanticCandidatesExpression="aql:self.rootpage" domainClass="arkUIModel.UIStruct">
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="30" arcHeight="30" borderSizeComputationExpression="1" labelSize="12" labelExpression="页面库" roundedCorner="true">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </containerMappings>
        <toolSections name="Elements">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Page" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='Page']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.rootpage">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Page" referenceName="page">
                  <subModelOperations xsi:type="tool:SetValue" featureName="pageTitle" valueExpression="aql:'home'"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="PageDelete">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContainer().eContainer()">
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.uidesign->select(p|p.name=element.pageTitle)->size()>0">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.uidesign->select(p|p.name=element.pageTitle)->first()">
                      <subModelOperations xsi:type="tool:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.uilogic->select(p|p.name=element.pageTitle)->size()>0">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.uilogic->select(p|p.name=element.pageTitle)->first()">
                      <subModelOperations xsi:type="tool:RemoveElement"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Relations"/>
        <toolSections name="Others">
          <ownedTools xsi:type="tool_1:DoubleClickDescription" name="Page" forceRefresh="true" mappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='Page'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='Page']/@subContainerMappings[name='SubPage'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='Page']/@subContainerMappings[name='SubPage']/@subContainerMappings[name='SubPage']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:element.eContainer().eContainer()">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:element.eContainer().eContainer().uidesign->select(ui|ui.name=element.pageTitle)->isEmpty()">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.UIDesign" referenceName="uidesign" variableName="uidesign">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:element.pageTitle"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:uidesign">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.PageStruct" referenceName="pageview">
                      <subModelOperations xsi:type="tool:SetValue" featureName="title" valueExpression="aql:element.pageTitle"/>
                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                        <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.PageEvent" referenceName="pageevent" variableName="event"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:element">
                    <subModelOperations xsi:type="tool:SetValue" featureName="uidesign" valueExpression="aql:uidesign"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:element.eContainer().eContainer().uilogic->select(ui|ui.name=element.pageTitle)->isEmpty()">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.UILogic" referenceName="uilogic" variableName="uilogic">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:element.pageTitle"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:element">
                    <subModelOperations xsi:type="tool:SetValue" featureName="uilogic" valueExpression="aql:uilogic"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:element.eContainer().eContainer().uidesign->select(ui|ui.name=element.pageTitle)->notEmpty()">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:element.eContainer().eContainer().uidesign->select(ui|ui.name=element.pageTitle)->first()">
                    <subModelOperations xsi:type="tool_1:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:element.eContainer().eContainer().uilogic->select(ui|ui.name=element.pageTitle)->notEmpty()">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:element.eContainer().eContainer().uilogic->select(ui|ui.name=element.pageTitle)->first()">
                    <subModelOperations xsi:type="tool_1:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DoubleClickDescription" name="StyleLibray" mappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:element.stylelibrary">
                <subModelOperations xsi:type="tool_1:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DoubleClickDescription" name="OperationLibray" mappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Model%20Diagram']/@defaultLayer/@containerMappings[name='OperationLibray']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:element.operationlibrary">
                <subModelOperations xsi:type="tool_1:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="UI Design Diagram" domainClass="arkUIModel.UIDesign" enablePopupBars="true">
      <metamodel href="../../ArkUIModel.arkUIModel/model/arkUIModel.ecore#/"/>
      <defaultLayer name="Default">
        <containerMappings name="PageStruct" semanticCandidatesExpression="aql:self.pageview" domainClass="arkUIModel.PageStruct">
          <subContainerMappings name="UIComponent" semanticCandidatesExpression="aql:self.widgets" domainClass="arkUIModel.UIComponent">
            <borderedNodeMappings name="IF" semanticCandidatesExpression="feature:if" domainClass="arkUIModel.IF">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/case.gif">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </borderedNodeMappings>
            <borderedNodeMappings name="ForEach" semanticCandidatesExpression="feature:foreach" domainClass="arkUIModel.ForEach">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/loop.gif">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </borderedNodeMappings>
            <subContainerMappings name="SubUIComponent" semanticCandidatesExpression="aql:self.widget" domainClass="arkUIModel.UIComponent">
              <borderedNodeMappings name="ForEach" semanticCandidatesExpression="feature:foreach" domainClass="arkUIModel.ForEach">
                <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/loop.gif">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                </style>
              </borderedNodeMappings>
              <borderedNodeMappings name="IF" semanticCandidatesExpression="feature:if" domainClass="arkUIModel.IF">
                <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/case.gif">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                </style>
              </borderedNodeMappings>
              <subContainerMappings name="SubUIComponent" semanticCandidatesExpression="aql:self.widget" domainClass="arkUIModel.UIComponent">
                <borderedNodeMappings name="ForEach" semanticCandidatesExpression="feature:foreach" domainClass="arkUIModel.ForEach">
                  <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/loop.gif">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  </style>
                </borderedNodeMappings>
                <borderedNodeMappings name="IF" semanticCandidatesExpression="feature:if" domainClass="arkUIModel.IF">
                  <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/case.gif">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  </style>
                </borderedNodeMappings>
                <subContainerMappings name="SubUIComponent" semanticCandidatesExpression="aql:self.widget" domainClass="arkUIModel.UIComponent">
                  <borderedNodeMappings name="ForEach" semanticCandidatesExpression="feature:foreach" domainClass="arkUIModel.ForEach">
                    <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/loop.gif">
                      <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    </style>
                  </borderedNodeMappings>
                  <borderedNodeMappings name="IF" semanticCandidatesExpression="feature:if" domainClass="arkUIModel.IF">
                    <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/case.gif">
                      <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    </style>
                  </borderedNodeMappings>
                  <subContainerMappings name="SubUIComponent" semanticCandidatesExpression="aql:self.widget" domainClass="arkUIModel.UIComponent">
                    <borderedNodeMappings name="ForEach" semanticCandidatesExpression="feature:foreach" domainClass="arkUIModel.ForEach">
                      <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/loop.gif">
                        <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      </style>
                    </borderedNodeMappings>
                    <borderedNodeMappings name="IF" semanticCandidatesExpression="feature:if" domainClass="arkUIModel.IF">
                      <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/case.gif">
                        <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      </style>
                    </borderedNodeMappings>
                    <subContainerMappings name="SubUIComponent" semanticCandidatesExpression="aql:self.widget" domainClass="arkUIModel.UIComponent">
                      <borderedNodeMappings name="ForEach" semanticCandidatesExpression="feature:foreach" domainClass="arkUIModel.ForEach">
                        <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/loop.gif">
                          <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        </style>
                      </borderedNodeMappings>
                      <borderedNodeMappings name="IF" semanticCandidatesExpression="feature:if" domainClass="arkUIModel.IF">
                        <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/case.gif">
                          <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        </style>
                      </borderedNodeMappings>
                      <subContainerMappings name="SubUIComponent" semanticCandidatesExpression="aql:self.widget" domainClass="arkUIModel.UIComponent">
                        <borderedNodeMappings name="ForEach" semanticCandidatesExpression="feature:foreach" domainClass="arkUIModel.ForEach">
                          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/loop.gif">
                            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          </style>
                        </borderedNodeMappings>
                        <borderedNodeMappings name="IF" semanticCandidatesExpression="feature:if" domainClass="arkUIModel.IF">
                          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/case.gif">
                            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          </style>
                        </borderedNodeMappings>
                        <conditionnalStyles predicateExpression="aql:self.widgetType='Widget'">
                          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="8" arcHeight="8" borderSizeComputationExpression="1" labelSize="10" labelExpression="feature:id" roundedCorner="true" widthComputationExpression="11" heightComputationExpression="4">
                            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
                          </style>
                        </conditionnalStyles>
                        <conditionnalStyles predicateExpression="aql:self.widgetType='Container'">
                          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="feature:id" roundedCorner="true">
                            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
                            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
                          </style>
                        </conditionnalStyles>
                        <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(arkUIModel::PageStruct)=true">
                          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="feature:title">
                            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                          </style>
                        </conditionnalStyles>
                      </subContainerMappings>
                      <subContainerMappings name="PageRefrence" deletionDescription="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='pagedelete']" semanticCandidatesExpression="aql:self.pagerefrence" domainClass="arkUIModel.PageRefrence">
                        <borderedNodeMappings name="ForEach" semanticCandidatesExpression="feature:foreach" domainClass="arkUIModel.ForEach">
                          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/loop.gif">
                            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          </style>
                        </borderedNodeMappings>
                        <borderedNodeMappings name="IF" semanticCandidatesExpression="feature:if" domainClass="arkUIModel.IF">
                          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/case.gif">
                            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          </style>
                        </borderedNodeMappings>
                        <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12">
                          <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                        </style>
                      </subContainerMappings>
                      <conditionnalStyles predicateExpression="aql:self.widgetType='Widget'">
                        <style xsi:type="style:FlatContainerStyleDescription" arcWidth="8" arcHeight="8" borderSizeComputationExpression="1" labelSize="10" labelExpression="feature:id" roundedCorner="true" widthComputationExpression="11" heightComputationExpression="4">
                          <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
                        </style>
                      </conditionnalStyles>
                      <conditionnalStyles predicateExpression="aql:self.widgetType='Container'">
                        <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="feature:id" roundedCorner="true">
                          <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
                          <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
                        </style>
                      </conditionnalStyles>
                      <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(arkUIModel::PageStruct)=true">
                        <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="feature:title">
                          <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                          <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                        </style>
                      </conditionnalStyles>
                    </subContainerMappings>
                    <subContainerMappings name="PageRefrence" deletionDescription="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='pagedelete']" semanticCandidatesExpression="aql:self.pagerefrence" domainClass="arkUIModel.PageRefrence">
                      <borderedNodeMappings name="ForEach" semanticCandidatesExpression="feature:foreach" domainClass="arkUIModel.ForEach">
                        <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/loop.gif">
                          <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        </style>
                      </borderedNodeMappings>
                      <borderedNodeMappings name="IF" semanticCandidatesExpression="feature:if" domainClass="arkUIModel.IF">
                        <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/case.gif">
                          <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                          <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        </style>
                      </borderedNodeMappings>
                      <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12">
                        <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                      </style>
                    </subContainerMappings>
                    <conditionnalStyles predicateExpression="aql:self.widgetType='Widget'">
                      <style xsi:type="style:FlatContainerStyleDescription" arcWidth="8" arcHeight="8" borderSizeComputationExpression="1" labelSize="10" labelExpression="feature:id" roundedCorner="true" widthComputationExpression="11" heightComputationExpression="4">
                        <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
                      </style>
                    </conditionnalStyles>
                    <conditionnalStyles predicateExpression="aql:self.widgetType='Container'">
                      <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="feature:id" roundedCorner="true">
                        <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
                        <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
                      </style>
                    </conditionnalStyles>
                    <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(arkUIModel::PageStruct)=true">
                      <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="feature:title">
                        <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                        <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                      </style>
                    </conditionnalStyles>
                  </subContainerMappings>
                  <subContainerMappings name="PageRefrence" deletionDescription="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='pagedelete']" semanticCandidatesExpression="aql:self.pagerefrence" domainClass="arkUIModel.PageRefrence">
                    <borderedNodeMappings name="ForEach" semanticCandidatesExpression="feature:foreach" domainClass="arkUIModel.ForEach">
                      <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/loop.gif">
                        <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      </style>
                    </borderedNodeMappings>
                    <borderedNodeMappings name="IF" semanticCandidatesExpression="feature:if" domainClass="arkUIModel.IF">
                      <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/case.gif">
                        <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                        <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      </style>
                    </borderedNodeMappings>
                    <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12">
                      <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                      <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                    </style>
                  </subContainerMappings>
                  <conditionnalStyles predicateExpression="aql:self.widgetType='Widget'">
                    <style xsi:type="style:FlatContainerStyleDescription" arcWidth="8" arcHeight="8" borderSizeComputationExpression="1" labelSize="10" labelExpression="feature:id" roundedCorner="true" widthComputationExpression="11" heightComputationExpression="4">
                      <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                      <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
                    </style>
                  </conditionnalStyles>
                  <conditionnalStyles predicateExpression="aql:self.widgetType='Container'">
                    <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="feature:id" roundedCorner="true">
                      <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                      <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
                      <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
                    </style>
                  </conditionnalStyles>
                  <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(arkUIModel::PageStruct)=true">
                    <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="feature:title">
                      <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                      <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                    </style>
                  </conditionnalStyles>
                </subContainerMappings>
                <subContainerMappings name="PageRefrence" deletionDescription="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='pagedelete']" semanticCandidatesExpression="aql:self.pagerefrence" domainClass="arkUIModel.PageRefrence">
                  <borderedNodeMappings name="ForEach" semanticCandidatesExpression="feature:foreach" domainClass="arkUIModel.ForEach">
                    <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/loop.gif">
                      <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    </style>
                  </borderedNodeMappings>
                  <borderedNodeMappings name="IF" semanticCandidatesExpression="feature:if" domainClass="arkUIModel.IF">
                    <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/case.gif">
                      <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                      <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    </style>
                  </borderedNodeMappings>
                  <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                  </style>
                </subContainerMappings>
                <conditionnalStyles predicateExpression="aql:self.widgetType='Widget'">
                  <style xsi:type="style:FlatContainerStyleDescription" arcWidth="8" arcHeight="8" borderSizeComputationExpression="1" labelSize="10" labelExpression="feature:id" roundedCorner="true" widthComputationExpression="11" heightComputationExpression="4">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.widgetType='Container'">
                  <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="feature:id" roundedCorner="true">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
                    <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
                  </style>
                </conditionnalStyles>
                <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(arkUIModel::PageStruct)=true">
                  <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="feature:title">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                    <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                  </style>
                </conditionnalStyles>
              </subContainerMappings>
              <subContainerMappings name="PageRefrence" deletionDescription="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='pagedelete']" semanticCandidatesExpression="aql:self.pagerefrence" domainClass="arkUIModel.PageRefrence">
                <borderedNodeMappings name="ForEach" semanticCandidatesExpression="feature:foreach" domainClass="arkUIModel.ForEach">
                  <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/loop.gif">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  </style>
                </borderedNodeMappings>
                <borderedNodeMappings name="IF" semanticCandidatesExpression="feature:if" domainClass="arkUIModel.IF">
                  <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/case.gif">
                    <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                    <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  </style>
                </borderedNodeMappings>
                <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                </style>
              </subContainerMappings>
              <conditionnalStyles predicateExpression="aql:self.widgetType='Widget'">
                <style xsi:type="style:FlatContainerStyleDescription" arcWidth="5" arcHeight="5" borderSizeComputationExpression="1" labelSize="10" labelExpression="feature:id" roundedCorner="true" widthComputationExpression="11" heightComputationExpression="4" backgroundStyle="GradientTopToBottom">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.widgetType='Container'">
                <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="feature:id" roundedCorner="true">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
                  <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(arkUIModel::PageStruct)=true">
                <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="feature:title">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                  <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                </style>
              </conditionnalStyles>
            </subContainerMappings>
            <subContainerMappings name="PageRefrence" deletionDescription="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='pagedelete']" semanticCandidatesExpression="aql:self.pagerefrence" domainClass="arkUIModel.PageRefrence">
              <borderedNodeMappings name="IF" semanticCandidatesExpression="feature:if" domainClass="arkUIModel.IF">
                <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/case.gif">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                </style>
              </borderedNodeMappings>
              <borderedNodeMappings name="ForEach" semanticCandidatesExpression="feature:foreach" domainClass="arkUIModel.ForEach">
                <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql:''" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/loop.gif">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                </style>
              </borderedNodeMappings>
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              </style>
            </subContainerMappings>
            <conditionnalStyles predicateExpression="aql:self.widgetType='Widget'">
              <style xsi:type="style:FlatContainerStyleDescription" arcWidth="5" arcHeight="5" borderSizeComputationExpression="1" labelSize="10" labelExpression="feature:id" roundedCorner="true" widthComputationExpression="11" heightComputationExpression="4">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.widgetType='Container'">
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="feature:id" roundedCorner="true">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
                <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(arkUIModel::PageStruct)=true">
              <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" labelExpression="feature:title">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
                <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              </style>
            </conditionnalStyles>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="50" arcHeight="50" borderSizeComputationExpression="1" labelSize="12" labelExpression="feature:title" roundedCorner="true" widthComputationExpression="50" heightComputationExpression="50">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </containerMappings>
        <toolSections name="System Tool">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="PageDesign" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='PageRefrence'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='PageRefrence'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='PageRefrence'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='PageRefrence'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='PageRefrence'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='PageRefrence'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='PageRefrence']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.PageRefrence" referenceName="pagerefrence">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="New Dialog">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation/>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation/>
                    </buttons>
                    <page name="Default Page" labelExpression="Page" domainClass="arkUIModel.PageRefrence" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='PageDesign']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                    <groups name="Default Group" labelExpression="Group" domainClass="arkUIModel.PageRefrence" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:TextDescription" labelExpression="引用页面：" valueExpression="aql:instance.name">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self"/>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:SelectDescription" labelExpression="选择自定义页面：" valueExpression="aql:instance.name" candidatesExpression="aql:self.eContainer().root.eContainer().eContainer().rootpage.page" candidateDisplayExpression="aql:candidate.pageTitle">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:newValue.pageTitle"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                    </groups>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.PageEvent" referenceName="pageevent" variableName="instanceevent"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.root.eContainer().eInverse()->select(ac|ac.eClass().name='Page')->first()">
                  <subModelOperations xsi:type="tool:SetValue" featureName="subpages" valueExpression="aql:container.root.eContainer().eInverse()->select(ac|ac.eClass().name='Page').eContainer().eAllContents()->select(ac | ac.pageTitle=instance.name)"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="IF" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@borderedNodeMappings[name='IF'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='PageRefrence']/@borderedNodeMappings[name='IF'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@borderedNodeMappings[name='IF'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='PageRefrence']/@borderedNodeMappings[name='IF'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@borderedNodeMappings[name='IF'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='PageRefrence']/@borderedNodeMappings[name='IF'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@borderedNodeMappings[name='IF'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='PageRefrence']/@borderedNodeMappings[name='IF'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@borderedNodeMappings[name='IF'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='PageRefrence']/@borderedNodeMappings[name='IF'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@borderedNodeMappings[name='IF'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='PageRefrence']/@borderedNodeMappings[name='IF'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@borderedNodeMappings[name='IF']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/case.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageRefrence'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.IF" referenceName="if">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Expression" referenceName="expression">
                      <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'exp'"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageRefrence')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.IF" referenceName="if">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Expression" referenceName="expression">
                      <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'exp'"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="ForEach" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@borderedNodeMappings[name='ForEach'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='PageRefrence']/@borderedNodeMappings[name='ForEach'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@borderedNodeMappings[name='ForEach'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@borderedNodeMappings[name='ForEach'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='PageRefrence']/@borderedNodeMappings[name='ForEach'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@borderedNodeMappings[name='ForEach'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='PageRefrence']/@borderedNodeMappings[name='ForEach'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@borderedNodeMappings[name='ForEach'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='PageRefrence']/@borderedNodeMappings[name='ForEach'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@borderedNodeMappings[name='ForEach'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='PageRefrence']/@borderedNodeMappings[name='ForEach'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@borderedNodeMappings[name='ForEach'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='PageRefrence']/@borderedNodeMappings[name='ForEach']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/loop.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageRefrence'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ForEach" referenceName="foreach">
                    <subModelOperations xsi:type="tool:SetValue" featureName="item" valueExpression="aql:'item'"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageRefrence')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ForEach" referenceName="foreach">
                    <subModelOperations xsi:type="tool:SetValue" featureName="item" valueExpression="aql:'item'"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription" name="pagedelete">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContainer().root.eContainer().eInverse()->select(ac|ac.eClass().name='Page')->first()">
                  <subModelOperations xsi:type="tool:Unset" featureName="subpages" elementExpression="aql:element.eContainer().root.eContainer().eInverse()->select(ac|ac.eClass().name='Page')->first().subpages->select(p|p.pageTitle=element.name)"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Containers">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Row" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/RowContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.RowContainer" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'行容器'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="space" valueExpression="aql:'20'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="alignItems" valueExpression="aql:'Center'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="justifyContent" valueExpression="aql:'Center'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.RowEvent" referenceName="rowevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.RowStyle" referenceName="rowstyle" variableName="style"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ContainerItems" referenceName="bindMenu" variableName="instancemenu">
                        <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'menu'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'menu'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool:SetValue" featureName="widget" valueExpression="aql:instancemenu"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.RowContainer" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'行容器'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="space" valueExpression="aql:'20'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="alignItems" valueExpression="aql:'Center'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="justifyContent" valueExpression="aql:'Center'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.RowEvent" referenceName="rowevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.RowStyle" referenceName="rowstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Column" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/ColumnContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ColumnContainer" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'列容器'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="space" valueExpression="aql:'5'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="alignItems" valueExpression="aql:'Center'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="justifyContent" valueExpression="aql:'Center'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ColumnEvent" referenceName="columnevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ColumnStyle" referenceName="columnstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ColumnContainer" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'列容器'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="space" valueExpression="aql:'5'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="alignItems" valueExpression="aql:'Center'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="justifyContent" valueExpression="aql:'Center'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ColumnEvent" referenceName="columnevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ColumnStyle" referenceName="columnstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Flex" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/FlexContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.FlexContainer" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'弹性容器'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="direction" valueExpression="aql:'Row'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="wrap" valueExpression="aql:'NoWrap'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="justifyContent" valueExpression="aql:'Start'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="alignItems" valueExpression="aql:'Auto'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="alignContent" valueExpression="aql:'Start'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.FlexEvent" referenceName="flexevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.FlexStyle" referenceName="flexstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.FlexContainer" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'弹性容器'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="direction" valueExpression="aql:'Row'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="wrap" valueExpression="aql:'NoWrap'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="justifyContent" valueExpression="aql:'Start'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="alignItems" valueExpression="aql:'Auto'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="alignContent" valueExpression="aql:'Start'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.FlexEvent" referenceName="flexevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.FlexStyle" referenceName="flexstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="List" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/ListContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ListContainer" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'序列'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="initialIndex" valueExpression="aql:'0'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="space" valueExpression="aql:'10'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ListItemContainer" referenceName="listitemcontainer" variableName="instancetool">
                        <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'listitem'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                        <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instancetool">
                          <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ListItemEvent" referenceName="listitemevent" variableName="event"/>
                          <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ListItemStyle" referenceName="listitemstyle" variableName="style"/>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ListEvent" referenceName="listevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ListStyle" referenceName="liststyle" variableName="style">
                        <subModelOperations xsi:type="tool:SetValue" featureName="listDirection" valueExpression="aql:'Vertical'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="edgeEffect" valueExpression="aql:'Spring'"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool:SetValue" featureName="widget" valueExpression="aql:instancetool"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ListContainer" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'序列'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="initialIndex" valueExpression="aql:'0'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="space" valueExpression="aql:'10'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ListEvent" referenceName="listevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ListStyle" referenceName="liststyle" variableName="style">
                        <subModelOperations xsi:type="tool:SetValue" featureName="listDirection" valueExpression="aql:'Vertical'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="edgeEffect" valueExpression="aql:'Spring'"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ListItemContainer" referenceName="listitemcontainer" variableName="instancetool">
                        <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'listitem'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                        <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instancetool">
                          <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ListItemEvent" referenceName="listitemevent" variableName="event"/>
                          <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ListItemStyle" referenceName="listitemstyle" variableName="style"/>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool:SetValue" featureName="widget" valueExpression="aql:instancetool"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="ListItem" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/ListItemContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='ListContainer' ">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ListItemContainer" referenceName="listitemcontainer" variableName="newNavigation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'listitem'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:newNavigation">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ListItemEvent" referenceName="listitemevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ListItemStyle" referenceName="listitemstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:SetValue" featureName="widget" valueExpression="aql:newNavigation"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Swiper" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/SwiperWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.SwiperWidget" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'轮播'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.SwiperEvent" referenceName="swiperevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.SwiperStyle" referenceName="swiperstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.SwiperWidget" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'轮播'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.SwiperEvent" referenceName="swiperevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.SwiperStyle" referenceName="swiperstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="NavigationContainer" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/NavigationContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.NavigationContainer" referenceName="widgets" variableName="newNavigation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'页面导航'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:newNavigation">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ContainerItems" referenceName="title" variableName="instancetitle">
                        <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'title'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'title'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ContainerItems" referenceName="toolbar" variableName="instancetool">
                        <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'toolbar'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'toolbar'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ContainerItems" referenceName="menu" variableName="instancemenu">
                        <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'menu'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'menu'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.NavigationEvent" referenceName="navigationevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.NavigationStyle" referenceName="navigationstyle" variableName="style"/>
                      <subModelOperations xsi:type="tool:SetValue" featureName="widget" valueExpression="aql:instancetitle"/>
                      <subModelOperations xsi:type="tool:SetValue" featureName="widget" valueExpression="aql:instancetool"/>
                      <subModelOperations xsi:type="tool:SetValue" featureName="widget" valueExpression="aql:instancemenu"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.NavigationContainer" referenceName="widget" variableName="newNavigation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'页面导航'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:newNavigation">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ContainerItems" referenceName="toolbar" variableName="instancetool">
                        <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'toolbar'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'toolbar'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ContainerItems" referenceName="menu" variableName="instancemenu">
                        <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'menu'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'menu'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.NavigationEvent" referenceName="navigationevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.NavigationStyle" referenceName="navigationstyle" variableName="style"/>
                      <subModelOperations xsi:type="tool:SetValue" featureName="widget" valueExpression="aql:instancetool"/>
                      <subModelOperations xsi:type="tool:SetValue" featureName="widget" valueExpression="aql:instancemenu"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="TabsContainer" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/TabsContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TabsContainer" referenceName="widgets" variableName="newNavigation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'tabs'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="index" valueExpression="aql:'0'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="barPosition" valueExpression="aql:'Start'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:newNavigation">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TabContent" referenceName="tabs" variableName="instancetool">
                        <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'tabcontent'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                        <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TabItem" referenceName="tabBar">
                          <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                          <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                          <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'tabBar'"/>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool:SetValue" featureName="widget" valueExpression="aql:instance"/>
                        <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instancetool">
                          <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TabContentStyle" referenceName="tabcontentstyle" variableName="style"/>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TabsEvent" referenceName="tabsevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TabsStyle" referenceName="tabsstyle" variableName="style"/>
                      <subModelOperations xsi:type="tool:SetValue" featureName="widget" valueExpression="aql:instancetool"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TabsContainer" referenceName="widget" variableName="newNavigation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="index" valueExpression="aql:'0'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="barPosition" valueExpression="aql:'Start'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'tabs'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:newNavigation">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TabContent" referenceName="tabs" variableName="instancetool">
                        <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                        <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TabItem" referenceName="tabBar">
                          <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                          <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool:SetValue" featureName="widget" valueExpression="aql:instance"/>
                        <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instancetool">
                          <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TabContentStyle" referenceName="tabcontentstyle" variableName="style"/>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TabsEvent" referenceName="tabsevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TabsStyle" referenceName="tabsstyle" variableName="style"/>
                      <subModelOperations xsi:type="tool:SetValue" featureName="widget" valueExpression="aql:instancetool"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="TabContent" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/TabsContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='TabsContainer' ">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TabContent" referenceName="tabs" variableName="newNavigation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'tabcontent'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:newNavigation">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TabItem" referenceName="tabBar">
                        <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'tabBar'"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool:SetValue" featureName="widget" valueExpression="aql:instance"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:newNavigation">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TabContentStyle" referenceName="tabcontentstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:SetValue" featureName="widget" valueExpression="aql:newNavigation"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Scroll" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/ScrollContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ScrollContainer" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'滚动窗'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ScrollEvent" referenceName="scrollevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ScrollStyle" referenceName="scrollstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ScrollContainer" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'滚动窗'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ScrollEvent" referenceName="scrollevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ScrollStyle" referenceName="scrollstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Stack" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/StackContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.StackContainer" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'堆容器'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="alignContent" valueExpression="aql:'Center'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.StackEvent" referenceName="stackevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.StackStyle" referenceName="stackstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.StackContainer" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'堆容器'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="alignContent" valueExpression="aql:'Center'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.StackEvent" referenceName="stackevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.StackStyle" referenceName="stackstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="CustomDialog" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/CustomDialogContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.CustomDialogContainer" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'对话框'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.CustomDialogEvent" referenceName="customdialogevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.CustomDialogStyle" referenceName="customdialogstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.CustomDialogContainer" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'对话框'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.CustomDialogEvent" referenceName="customdialogevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.CustomDialogStyle" referenceName="customdialogstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Grid" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/GridContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.GridContainer" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'网格容器'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="columnsTemplate" valueExpression="aql:'1fr'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="rowsTemplate" valueExpression="aql:'1fr'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.GridEvent" referenceName="gridevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.GridStyle" referenceName="gridstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.GridContainer" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'网格容器'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="columnsTemplate" valueExpression="aql:'1fr'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="rowsTemplate" valueExpression="aql:'1fr'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.GridEvent" referenceName="gridevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.GridStyle" referenceName="gridstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="GridItem" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/GridContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='GridContainer' ">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.GridItemContainer" referenceName="griditemcontainer">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'griditem'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.GridItemStyle" referenceName="griditemstyle" variableName="style"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.GridItemEvent" referenceName="griditemevent" variableName="event"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:SetValue" featureName="widget" valueExpression="aql:instance"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Line" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/LineContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.LineContainer" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'线容器'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.LineEvent" referenceName="lineevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.LineStyle" referenceName="linestyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.LineContainer" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'线容器'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Container'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.LineEvent" referenceName="lineevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.LineStyle" referenceName="linestyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Widgets">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Button" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/ButtonWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ButtonWidget" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'按钮'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="label" valueExpression="aql:'button'+container.eAllContents(arkUIModel::ButtonWidget)->size()"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="stateEffect" valueExpression="aql:'false'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'Capsule'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ButtonEvent" referenceName="buttonevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ButtonStyle" referenceName="buttonstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ButtonWidget" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'按钮'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="label" valueExpression="aql:'button'+container.eAllContents(arkUIModel::ButtonWidget)->size()"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="stateEffect" valueExpression="aql:'false'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'Capsule'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ButtonEvent" referenceName="buttonevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ButtonStyle" referenceName="buttonstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Text" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/TextWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextWidget" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'文本'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="content" valueExpression="aql:'text'+container.eAllContents(arkUIModel::TextWidget)->size()"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextEvent" referenceName="textevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextStyle" referenceName="textstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextWidget" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'文本'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="content" valueExpression="aql:'text'+container.eAllContents(arkUIModel::TextWidget)->size()"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextEvent" referenceName="textevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextStyle" referenceName="textstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="TextInput" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/TextInputWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextInputWidget" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'输入框'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="text" valueExpression="aql:'textinput'+container.eAllContents(arkUIModel::TextInputWidget)->size()"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextInputEvent" referenceName="textinputevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextInputStyle" referenceName="textinputstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextInputWidget" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'输入框'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="text" valueExpression="aql:'textinput'+container.eAllContents(arkUIModel::TextInputWidget)->size()"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextInputEvent" referenceName="textinputevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextInputStyle" referenceName="textinputstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Image" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/ImageWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ImageWidget" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'图片'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="src"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ImageEvent" referenceName="imageevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ImageStyle" referenceName="imagestyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ImageWidget" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'图片'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="src"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ImageEvent" referenceName="imageevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ImageStyle" referenceName="imagestyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="ImageAnimator" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/ImageAnimator.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ImageAnimator" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'动画'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ImageAnimatorEvent" referenceName="imageanimatorevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ImageAnimatorStyle" referenceName="imageanimatorstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ImageAnimator" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'动画'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ImageAnimatorEvent" referenceName="imageanimatorevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ImageAnimatorStyle" referenceName="imageanimatorstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Toggle" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/ToggleWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ToggleWidget" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'开关'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="label" valueExpression="aql:'toggle'+container.eAllContents(arkUIModel::ToggleWidget)->size()"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="isOn" valueExpression="aql:'false'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'Switch'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ToggleEvent" referenceName="toggleevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ToggleStyle" referenceName="togglestyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ToggleWidget" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'开关'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="label" valueExpression="aql:'toggle'+container.eAllContents(arkUIModel::ToggleWidget)->size()"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="isOn" valueExpression="aql:'false'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'Switch'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ToggleEvent" referenceName="toggleevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ToggleStyle" referenceName="togglestyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="TimePicker" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/TimePickerWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TimePickerWidget" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'time'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="label" valueExpression="aql:'time'+container.eAllContents(arkUIModel::TimePickerWidget)->size()"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="selected" valueExpression="aql:''"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="start" valueExpression="aql:''"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="end" valueExpression="aql:''"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TimePickerEvent" referenceName="timepickerevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TimePickerStyle" referenceName="timepickerstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TimePickerWidget" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'time'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="label" valueExpression="aql:'toggle'+container.eAllContents(arkUIModel::ToggleWidget)->size()"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="selected" valueExpression="aql:''"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="start" valueExpression="aql:''"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="end" valueExpression="aql:''"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TimePickerEvent" referenceName="timepickerevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TimePickerStyle" referenceName="timepickerstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="DatePicker" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/DatePickerWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.DatePickerWidget" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'日期选择'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="label" valueExpression="aql:'datepicker'+container.eAllContents(arkUIModel::DatePickerWidget)->size()"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="selected" valueExpression="aql:''"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="start" valueExpression="aql:''"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="end" valueExpression="aql:''"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.DatePickerEvent" referenceName="datepickerevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.DatePickerStyle" referenceName="datepickerstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.DatePickerWidget" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'日期选择'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="label" valueExpression="aql:'datepicker'+container.eAllContents(arkUIModel::DatePickerWidget)->size()"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="selected" valueExpression="aql:''"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="start" valueExpression="aql:''"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="end" valueExpression="aql:''"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.DatePickerEvent" referenceName="datepickerevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.DatePickerStyle" referenceName="datepickerstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="TextPicker" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/TextPickerWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextPickerWidget" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'文本选择'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="label" valueExpression="aql:'textpicker'+container.eAllContents(arkUIModel::TextPickerWidget)->size()"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextPickerEvent" referenceName="textpickerevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextPickerStyle" referenceName="textpickerstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextPickerWidget" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'文本选择'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="label" valueExpression="aql:'textpicker'+container.eAllContents(arkUIModel::TextPickerWidget)->size()"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextPickerEvent" referenceName="textpickerevent" variableName="event"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextPickerStyle" referenceName="textpickerstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="Divider" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/DividerWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.DividerWidget" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'divider'+container.eAllContents(arkUIModel::DividerWidget)->size()"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="label" valueExpression="aql:'divider'+container.eAllContents(arkUIModel::DividerWidget)->size()"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.DividerStyle" referenceName="dividerstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.DividerWidget" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'divider'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="label" valueExpression="aql:'divider'+container.eAllContents(arkUIModel::DividerWidget)->size()"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.DividerStyle" referenceName="dividerstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="SearchWidget" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/SearchWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.SearchWidget" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'搜索框'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="label" valueExpression="aql:'搜索框'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.SearchStyle" referenceName="searchstyle" variableName="style"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.SearchEvent" referenceName="searchevent" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.SearchWidget" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'搜索框'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="label" valueExpression="aql:'搜索框'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.SearchStyle" referenceName="searchstyle" variableName="style"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.SearchEvent" referenceName="searchevent" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="BlankWidget" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/BlankWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.BlankWidget" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'空格'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="label" valueExpression="aql:'空格'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.BlankStyle" referenceName="blankstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.BlankWidget" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'空格'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="label" valueExpression="aql:'空格'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.BlankStyle" referenceName="blankstyle" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="ProgressWidget" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Design%20Diagram']/@defaultLayer/@containerMappings[name='PageStruct']/@subContainerMappings[name='UIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']/@subContainerMappings[name='SubUIComponent']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/ProgressWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eClass().name='PageStruct'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ProgressWidget" referenceName="widgets">
                    <subModelOperations xsi:type="tool:SetValue" featureName="total" valueExpression="aql:'100'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'进度条'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="label" valueExpression="aql:'进度条'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="showType" valueExpression="aql:'Progress'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ProgressStyle" referenceName="progressstyle" variableName="style"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ProgressEvent" referenceName="progressevent" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(container.eClass().name='PageStruct')">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ProcessWidget" referenceName="widget">
                    <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="aql:'进度条'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="label" valueExpression="aql:'进度条'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="widgetType" valueExpression="aql:'Widget'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="showType" valueExpression="aql:'Progress'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="root" valueExpression="aql:container.root"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="total" valueExpression="aql:'100'"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ProgressStyle" referenceName="progressstyle" variableName="style"/>
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ProgressEvent" referenceName="progressevent" variableName="style"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="UI Control"/>
        <toolSections name="Others">
          <ownedTools xsi:type="tool:ExternalJavaAction" name="OpenEmbeddedEditor" forceRefresh="true" id="OpenEmbeddedEditor"/>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="UI Logic Diagram" domainClass="arkUIModel.UILogic" enablePopupBars="true">
      <metamodel href="../../ArkUIModel.arkUIModel/model/arkUIModel.ecore#/"/>
      <defaultLayer name="Default">
        <edgeMappings name="FlowLine" semanticCandidatesExpression="aql:containerView.target.eAllContents(arkUIModel::FlowLine)" sourceMapping="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" targetMapping="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" targetFinderExpression="aql:self.target" sourceFinderExpression="aql:self.source" domainClass="arkUIModel.FlowLine" useDomainElement="true">
          <style sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='purple']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.value">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:self.type.toString()='condition'">
            <style sizeComputationExpression="2" routingStyle="manhattan">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
              <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.value">
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.type.toString()='exception'">
            <style sizeComputationExpression="2" routingStyle="manhattan">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.value">
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.type.toString()='continue'">
            <style sizeComputationExpression="2" routingStyle="manhattan">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
              <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.value">
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <containerMappings name="WorkFlow" semanticCandidatesExpression="aql:self.workflow" domainClass="arkUIModel.WorkFlow">
          <subNodeMappings name="Function" deletionDescription="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='']" semanticCandidatesExpression="aql:self.function" doubleClickDescription="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='openEEF']" domainClass="arkUIModel.Function">
            <conditionnalStyles predicateExpression="aql:self.functionType='UIOperation'">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.functionType='SeviceOperation'">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/SeviceOperation.gif">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.functionType='ExtraOperation'">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/ExtraOperation.gif">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.functionType='Start'">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" sizeComputationExpression="-1" resizeKind="NSEW" arcWidth="30" arcHeight="30" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/start.gif">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.functionType='End'">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/stop.gif">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.functionType='Loop'">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/LoopOp.gif">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.functionType='Case'">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/CaseOp.gif">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="100" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="feature:flowName">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </containerMappings>
        <containerMappings name="UILogic" semanticCandidatesExpression="aql:self" domainClass="arkUIModel.UILogic">
          <subNodeMappings name="Parameter" semanticCandidatesExpression="aql:self.pageparameter" doubleClickDescription="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@toolSections.6/@ownedTools[name='openEEF']" domainClass="arkUIModel.Parameter">
            <style xsi:type="style:LozengeNodeDescription" labelSize="12" showIcon="false" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            </style>
            <conditionnalStyles predicateExpression="aql:self.pType='class'">
              <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.pType='string' or self.pType='number' or self.pType='boolean'">
              <style xsi:type="style:DotDescription" labelSize="12" showIcon="false" resizeKind="NSEW" strokeSizeComputationExpression="3">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.pType='array'">
              <style xsi:type="style:EllipseNodeDescription" labelSize="12" showIcon="false" resizeKind="NSEW" horizontalDiameterComputationExpression="3" verticalDiameterComputationExpression="2">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              </style>
            </conditionnalStyles>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'变量'">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
          </style>
        </containerMappings>
        <toolSections name="System Tool">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="工作流" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.WorkFlow" referenceName="workflow">
                  <subModelOperations xsi:type="tool:SetValue" featureName="flowName" valueExpression="aql:'function'"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function" variableName="instancef">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'start'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'Start'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="aql:instance"/>
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.StartOp" referenceName="operation" variableName="instances"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function" variableName="instancee">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'end'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'End'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="aql:instance"/>
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.EndOp" referenceName="operation" variableName="instancee"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="变量" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='UILogic']/@subNodeMappings[name='Parameter']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Parameter" referenceName="pageparameter">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'argument'+container.pageparameter->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="pType" valueExpression="string"/>
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="ParameterType">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation/>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                          <subModelOperations xsi:type="tool:Switch">
                            <cases conditionExpression="aql:instance.pType='string' or instance.pType='number' or instance.pType='boolean'">
                              <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TypeCS" referenceName="type" variableName="insTC">
                                <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:instance.pType"/>
                              </subModelOperations>
                            </cases>
                            <cases conditionExpression="aql:instance.pType='class'">
                              <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Entity" referenceName="type" variableName="insTC">
                                <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:instance.pType"/>
                              </subModelOperations>
                            </cases>
                            <cases conditionExpression="aql:instance.pType='array'">
                              <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Array" referenceName="type" variableName="insTC">
                                <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:instance.pType"/>
                                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TypeCS" referenceName="atype" variableName="instancets">
                                  <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'string'"/>
                                </subModelOperations>
                              </subModelOperations>
                            </cases>
                            <cases conditionExpression="aql:instance.pType='callfun'">
                              <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.CallFun" referenceName="type" variableName="insTC">
                                <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:instance.pType"/>
                              </subModelOperations>
                            </cases>
                            <default>
                              <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Entity" referenceName="type" variableName="insTC">
                                <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:instance.pType"/>
                                <subModelOperations xsi:type="tool:For" expression="aql:self.eContainer().eContainer().eContainer().operationlibray.domainmodel.entity->select(ac|ac.name=instance.pType)->first().attributes" iteratorName="attribute">
                                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:insTC">
                                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.EntityAttribute" referenceName="attributes" variableName="instanceea">
                                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instanceea">
                                        <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:attribute.name"/>
                                      </subModelOperations>
                                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TypeCS" referenceName="type" variableName="instanceCS">
                                        <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:attribute.type.type"/>
                                      </subModelOperations>
                                    </subModelOperations>
                                  </subModelOperations>
                                </subModelOperations>
                              </subModelOperations>
                            </default>
                          </subModelOperations>
                        </firstModelOperations>
                      </initialOperation>
                    </buttons>
                    <page name="ParameterType" labelExpression="Page" domainClass="arkUIModel.Parameter" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='变量']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.2/@groups.0"/>
                    <groups name="Default Group" labelExpression="Group" domainClass="arkUIModel.Parameter" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:TextDescription" name="name" labelExpression="aql:'变量名称'" valueExpression="aql:instance.name">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                            <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:TextDescription" name="Type" labelExpression="aql:'变量类型'" valueExpression="aql:instance.pType">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self"/>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:SelectDescription" labelExpression="变量类型：" valueExpression="aql:self.pType" candidatesExpression="aql:OrderedSet{'string', 'number', 'boolean','class','array','callfun','Resource', 'CustomDialogController'}+(self.eContainer().eContainer().operationlibray.domainmodel.entity.name)" candidateDisplayExpression="aql:candidate">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool:SetValue" featureName="pType" valueExpression="aql:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:TextDescription" name="Value" labelExpression="aql:'初始值'" valueExpression="aql:instance.value">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                            <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Connect Line">
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="SequenceLine" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@edgeMappings[name='FlowLine']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/sequence.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source.eContainer()">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:(source.eContainer().eAllContents(arkUIModel::FlowLine)->select(ac | ac.source=source)->size()=0))">
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:(not(source.functionType='End'))and (not(target.functionType='Start'))">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.FlowLine" referenceName="flowline">
                      <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'sequence'"/>
                      <subModelOperations xsi:type="tool:SetValue" featureName="value"/>
                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                        <subModelOperations xsi:type="tool:SetValue" featureName="source" valueExpression="aql:source"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="target" valueExpression="aql:target"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="ContinueLine" edgeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@edgeMappings[name='FlowLine']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/loop.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source.eContainer()">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:source.functionType='Loop'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.FlowLine" referenceName="flowline">
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'continue'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:'continue'"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:SetValue" featureName="source" valueExpression="aql:source"/>
                      <subModelOperations xsi:type="tool:SetValue" featureName="target" valueExpression="aql:target"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="ConditionLine" edgeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@edgeMappings[name='FlowLine']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/CaseOp.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source.eContainer()">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:source.functionType='Case'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.FlowLine" referenceName="flowline">
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'condition'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="value"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:SetValue" featureName="source" valueExpression="aql:source"/>
                      <subModelOperations xsi:type="tool:SetValue" featureName="target" valueExpression="aql:target"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="ExceptionLine" edgeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@edgeMappings[name='FlowLine']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/exception.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source.eContainer()">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:(source.eContainer().eAllContents(arkUIModel::FlowLine)->select(ac | ac.type='exception' and ac.source=source)->size()=0)">
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:(source.functionType!='Start' and source.functionType!='End' and source.functionType!='Loop' and source.functionType!='Case')">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.FlowLine" referenceName="flowline">
                      <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'exception'"/>
                      <subModelOperations xsi:type="tool:SetValue" featureName="value"/>
                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                        <subModelOperations xsi:type="tool:SetValue" featureName="source" valueExpression="aql:source"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="target" valueExpression="aql:target"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Control Tool">
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Start" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/start.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eAllContents()->select(ac | ac.functionType='Start')->size()>0"/>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eAllContents()->select(ac | ac.functionType='Start')->size()&lt;1">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'start'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'Start'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.StartOp" referenceName="operation"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="End" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/stop.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eAllContents()->select(ac | ac.functionType='End')->size()&lt;1">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'end'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'End'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.EndOp" referenceName="operation"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Loop" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/LoopOp.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'loop'+container.eAllContents()->select(ac | ac.functionType='Loop')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'Loop'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.LoopOp" referenceName="operation" variableName="insloop">
                    <subModelOperations xsi:type="tool:SetValue" featureName="start" valueExpression="aql:'1'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="end" valueExpression="aql:'3'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="step" valueExpression="aql:'1'"/>
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Expression" referenceName="expression" variableName="insexp">
                      <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'exp'"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Case" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/CaseOp.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'case'+container.eAllContents()->select(ac | ac.functionType='Case')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'Case'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.CaseOp" referenceName="operation" variableName="insloop">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Expression" referenceName="expression" variableName="insexp">
                      <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'exp'"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="UI Operation" icon="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="SetParameter" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'setValue'+container.eAllContents()->select(ac | ac.functionType='SetParameter')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.SetParameter" referenceName="operation"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="GetParameter" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'getValue'+container.eAllContents()->select(ac | ac.functionType='GetParameter')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.GetParameter" referenceName="operation"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="RouteSkip" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'route'+container.eAllContents()->select(ac | ac.functionType='RouteSkip')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.RouteSkip" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'push'"/>
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="选择跳转页面">
                      <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                        <initialOperation/>
                      </buttons>
                      <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.eContainer().eContainer().rootpage.page->select(p|p.pageTitle=(container.eContainer().name))->first()">
                            <subModelOperations xsi:type="tool:SetValue" featureName="pageroute" valueExpression="aql:container.eContainer().eContainer().rootpage.page->select(p|p.pageTitle=(instance.page))->first()"/>
                          </firstModelOperations>
                        </initialOperation>
                      </buttons>
                      <page name="Default Page" labelExpression="Page" domainClass="arkUIModel.RouteSkip" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@toolSections.3/@ownedTools[name='RouteSkip']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.3/@subModelOperations.1/@groups.0"/>
                      <groups name="Default Group" labelExpression="Group" domainClass="arkUIModel.RouteSkip" semanticCandidateExpression="var:self">
                        <controls xsi:type="properties:TextDescription" valueExpression="aql:self.page">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self"/>
                          </initialOperation>
                        </controls>
                        <controls xsi:type="properties:SelectDescription" labelExpression="选择跳转页面：" valueExpression="aql:self.page" candidatesExpression="aql:self.eContainer().eContainer().eContainer().eContainer().rootpage.page->select(p|p.pageTitle!=(self.eContainer().workflow.eContainer().name))" candidateDisplayExpression="aql:candidate.pageTitle">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                              <subModelOperations xsi:type="tool:SetValue" featureName="page" valueExpression="aql:newValue.pageTitle"/>
                            </firstModelOperations>
                          </initialOperation>
                        </controls>
                      </groups>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="GetRouteValue" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'route'+container.eAllContents()->select(ac | ac.functionType='GetRouteValue')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.GetRouteValue" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="variable"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Scroller" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'scroller'+container.eAllContents()->select(ac | ac.functionType='Scroller')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Scroller" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="assginScroll"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="scrollType"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="DataPreferences" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'datarefrences'+container.eAllContents()->select(ac | ac.functionType='DataPreferences')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.DataPreferences" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="preferencesType"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="preferences"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="TerminateSelf" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'terminateself'+container.eAllContents()->select(ac | ac.functionType='TerminateSelf')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TerminateSelf" referenceName="operation"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="OpenDialog" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'opendialog'+container.eAllContents()->select(ac | ac.functionType='OpenDialog')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.OpenDialog" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="assignDialog"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="CloseDialog" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'closedialog'+container.eAllContents()->select(ac | ac.functionType='CloseDialog')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.CloseDialog" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="assignDialog"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="SetTimeOut" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'settimeout'+container.eAllContents()->select(ac | ac.functionType='SetTimeOut')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.SetTimeOut" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="handler"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="delay" valueExpression="1000"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="ClearTimeOut" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'cleartimeout'+container.eAllContents()->select(ac | ac.functionType='ClearTimeOut')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ClearTimeOut" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="timeoutID"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="ShowToastOptions" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'showtoast'+container.eAllContents()->select(ac | ac.functionType='ShowToastOptions')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ShowToastOptions" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="message"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="duration"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="bottom"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:element.eAllContents(arkUIModel::RouteSkip)->size()>0">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:element.workflow.eContainer().eContainer().rootpage.page->select(p|p.pageTitle=(element.workflow.eContainer().name))->first()">
                    <subModelOperations xsi:type="tool:Unset" featureName="pageroute" elementExpression="aql:element.workflow.eContainer().eContainer().rootpage.page->select(p|p.pageTitle=(element.eAllContents(arkUIModel::RouteSkip)->first().page))->first()"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="ChangeIndex" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'changeindex'+container.eAllContents()->select(ac | ac.functionType='ChangeIndex')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ChangeIndex" referenceName="operation"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Service Operation">
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="HttpOperation" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/SeviceOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'post'+container.eAllContents()->select(ac | ac.functionType='SeviceOperation')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'SeviceOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.HttpOperation" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="httpType" valueExpression="aql:'POST'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="res" valueExpression="aql:'data.result'"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="WorkOperation" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/WorkFlow.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'工作流'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'SeviceOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.WorkOperation" referenceName="operation">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="New Dialog">
                      <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                        <initialOperation/>
                      </buttons>
                      <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                        <initialOperation/>
                      </buttons>
                      <page name="Default Page" labelExpression="Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@toolSections.4/@ownedTools[name='WorkOperation']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.3/@subModelOperations.0/@groups.0"/>
                      <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self">
                        <controls xsi:type="properties:SelectDescription" valueExpression="aql:instance.title" candidatesExpression="aql:self.eContainer().eContainer().eContainer().workflow.flowName+(self.eContainer().eContainer().eContainer().eContainer().operationlibray.workflows.flowName)" candidateDisplayExpression="aql:candidate">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool:SetValue" featureName="title" valueExpression="aql:newValue"/>
                            </firstModelOperations>
                          </initialOperation>
                        </controls>
                      </groups>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Extra Operation">
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="CheckEqual" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/ExtraOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'equal'+container.eAllContents()->select(ac | ac.functionType='ExtraOperation')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'ExtraOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.CheckEqual" referenceName="operation"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Other Tool">
          <ownedTools xsi:type="tool_1:DoubleClickDescription" name="openEEF" forceRefresh="true" mappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='UILogic']/@subNodeMappings[name='Parameter'] //@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Logic%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ExternalJavaAction" name="Open EEF Wizard Action" id="org.eclipse.sirius.eef.actions.openPropertiesWizard"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="UI Style Diagram" domainClass="arkUIModel.StyleLibray" enablePopupBars="true">
      <metamodel href="../../ArkUIModel.arkUIModel/model/arkUIModel.ecore#/"/>
      <defaultLayer name="Default">
        <containerMappings name="StyleLibray" domainClass="arkUIModel.StyleLibray">
          <subNodeMappings name="StyleClass" semanticCandidatesExpression="aql:self.styleclass->select(st|st.oclIsTypeOf(arkUIModel::StyleClass)=true)" domainClass="arkUIModel.StyleClass">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" showIcon="false" sizeComputationExpression="8" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="FlexStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.FlexStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="RowStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.RowStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="ColumnStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.ColumnStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="NavigationStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.NavigationStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="ListStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.ListStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="SwiperStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.SwiperStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="ButtonStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.ButtonStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="TextInputStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.TextInputStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="ImageStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.ImageStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="TextStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.TextStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="TabsStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.TabsStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="StackStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.StackStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="ScrollStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.ScrollStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="CustomDialogStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.CustomDialogStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="ToggleStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.ToggleStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="TimePickerStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.TimePickerStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="DatePickerStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.DatePickerStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="TextPickerStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.TextPickerStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="DividerStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.DividerStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="TabContentStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.TabContentStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="GridStyle" semanticCandidatesExpression="aql:self.styleclass" domainClass="arkUIModel.GridStyle">
            <style xsi:type="style:EllipseNodeDescription" labelSize="10" labelAlignment="LEFT" sizeComputationExpression="8" resizeKind="NSEW" horizontalDiameterComputationExpression="10" verticalDiameterComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="styleLibray">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
          </style>
        </containerMappings>
        <containerMappings name="AnimationLibray" domainClass="arkUIModel.AnimationLibray">
          <subNodeMappings name="AnimationClass" semanticCandidatesExpression="aql:self.animationclass" domainClass="arkUIModel.AnimationClass">
            <style xsi:type="style:LozengeNodeDescription" labelSize="12" sizeComputationExpression="8" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="animationLibray">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_yellow']"/>
          </style>
        </containerMappings>
        <toolSections name="Common Style">
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="StyleClass" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='StyleClass']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/StyleClass.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.StyleClass" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'styleclass'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Container Style">
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="FlexStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='FlexStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/FlexContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.FlexStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'flexstyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="RowStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='RowStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/RowContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.RowStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'rowstyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="ColumnStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='ColumnStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/ColumnContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ColumnStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'columnstyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="ListStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='ListStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/ListContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ListStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'liststyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="NavigationStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='NavigationStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/NavigationContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.NavigationStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'navigationstyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="SwiperStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='SwiperStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/SwiperWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.SwiperStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'swiperstyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="TabsStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='TabsStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/TabsContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TabsStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'tabsstyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="TabContentStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='TabContentStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/TabsContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TabContentStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'tabcontentstyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="StackStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='StackStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/StackContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.StackStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'stackstyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="ScrollStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='ScrollStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/ScrollContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ScrollStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'scrollstyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="CustomDialogStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='CustomDialogStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/CustomDialogContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.CustomDialogStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'customstyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="GridStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='GridStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/GridContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.GridStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'gridstyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="GridStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='GridStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/LineContainer.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.LineStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'linestyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Widget Style">
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="ButtonStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='ButtonStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/ButtonWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ButtonStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'buttonstyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="TextStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='TextStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/TextWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'textstyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="TextInputStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='TextInputStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/TextInputWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextInputStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'textinputstyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="ImageStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='ImageStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/ImageWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ImageStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'imagestyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="ToggleStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='ToggleStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/ToggleWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ToggleStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'togglestyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="TimePickerStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='TimePickerStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/TimePickerWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TimePickerStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'timepickerstyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="DatePickerStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='DatePickerStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/DatePickerWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.DatePickerStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'datepickerstyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="TextPickerStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='TextPickerStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/TextPickerWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TextPickerStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'textpickerstyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="DividerStyle" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='StyleLibray']/@subNodeMappings[name='DividerStyle']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/DividerWidget.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.DividerStyle" referenceName="styleclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'dividerstyle'+container.styleclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Animation Style">
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="AnimationClass" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Style%20Diagram']/@defaultLayer/@containerMappings[name='AnimationLibray']/@subNodeMappings[name='AnimationClass']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/component/AnimationClass.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.AnimationClass" referenceName="animationclass">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'animationclass'+container.animationclass->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="UI Operation Diagram" domainClass="arkUIModel.OperationLibray" enablePopupBars="true">
      <metamodel href="../../ArkUIModel.arkUIModel/model/arkUIModel.ecore#/"/>
      <defaultLayer name="Default">
        <edgeMappings name="EntityRefrence" sourceMapping="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='DomainModel']/@subContainerMappings[name='Entity']" targetMapping="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='DomainModel']/@subContainerMappings[name='Entity']" targetFinderExpression="feature:entity" sourceFinderExpression="aql:self.eContainer()" domainClass="arkUIModel.EntityRefrence" useDomainElement="true">
          <conditionnalStyles predicateExpression="aql:self.type='Composition'">
            <style targetArrow="NoDecoration" sizeComputationExpression="0.5">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <beginLabelStyleDescription showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </beginLabelStyleDescription>
              <endLabelStyleDescription showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </endLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.type='Association'">
            <style targetArrow="NoDecoration" sizeComputationExpression="0.5">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <beginLabelStyleDescription showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </beginLabelStyleDescription>
              <endLabelStyleDescription showIcon="false">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </endLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="SuperEntity" sourceMapping="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='DomainModel']/@subContainerMappings[name='Entity']" targetMapping="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='DomainModel']/@subContainerMappings[name='Entity']" targetFinderExpression="aql:self.superEntity">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="FlowLine" semanticCandidatesExpression="aql:containerView.target.eAllContents(arkUIModel::FlowLine)" sourceMapping="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" targetMapping="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" targetFinderExpression="aql:self.target" sourceFinderExpression="aql:self.source" domainClass="arkUIModel.FlowLine" useDomainElement="true">
          <style sizeComputationExpression="2" routingStyle="manhattan">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='purple']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.value">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
          <conditionnalStyles predicateExpression="aql:self.type.toString()='condition'">
            <style sizeComputationExpression="2" routingStyle="manhattan">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='orange']"/>
              <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.value">
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.type.toString()='exception'">
            <style sizeComputationExpression="2" routingStyle="manhattan">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='red']"/>
              <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.value">
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.type.toString()='continue'">
            <style sizeComputationExpression="2" routingStyle="manhattan">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='green']"/>
              <centerLabelStyleDescription showIcon="false" labelExpression="aql:self.value">
                <labelFormat>bold</labelFormat>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </centerLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <containerMappings name="WorkFlow" semanticCandidatesExpression="aql:self.workflows" domainClass="arkUIModel.WorkFlow">
          <subNodeMappings name="Function" semanticCandidatesExpression="aql:self.function" domainClass="arkUIModel.Function">
            <conditionnalStyles predicateExpression="aql:self.functionType='UIOperation'">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.functionType='SeviceOperation'">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/SeviceOperation.gif">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.functionType='ExtraOperation'">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/ExtraOperation.gif">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.functionType='Start'">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" sizeComputationExpression="-1" resizeKind="NSEW" arcWidth="30" arcHeight="30" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/start.gif">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.functionType='End'">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/stop.gif">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.functionType='Loop'">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/LoopOp.gif">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.functionType='Case'">
              <style xsi:type="style:WorkspaceImageDescription" labelSize="10" showIcon="false" sizeComputationExpression="-1" resizeKind="NSEW" workspacePath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/CaseOp.gif">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </conditionnalStyles>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="100" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="feature:flowName">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </containerMappings>
        <containerMappings name="OperationLibray" semanticCandidatesExpression="aql:self" domainClass="arkUIModel.OperationLibray">
          <subNodeMappings name="Parameter" semanticCandidatesExpression="aql:self.projectparameters" domainClass="arkUIModel.Parameter">
            <style xsi:type="style:LozengeNodeDescription" labelSize="12" showIcon="false" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            </style>
            <conditionnalStyles predicateExpression="aql:self.pType='class'">
              <style xsi:type="style:SquareDescription" labelSize="12" showIcon="false" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.pType='string' or self.pType='number' or self.pType='boolean'">
              <style xsi:type="style:DotDescription" labelSize="12" showIcon="false" resizeKind="NSEW" strokeSizeComputationExpression="3">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.pType='array'">
              <style xsi:type="style:EllipseNodeDescription" labelSize="12" showIcon="false" resizeKind="NSEW" horizontalDiameterComputationExpression="3" verticalDiameterComputationExpression="2">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
              </style>
            </conditionnalStyles>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="20" arcHeight="20" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'项目变量'" roundedCorner="true">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_orange']"/>
          </style>
        </containerMappings>
        <containerMappings name="DomainModel" semanticCandidatesExpression="aql:self.domainmodel" domainClass="arkUIModel.DomainModel">
          <subContainerMappings name="Entity" semanticCandidatesExpression="aql:self.entity" domainClass="arkUIModel.Entity" childrenPresentation="List">
            <subNodeMappings name="EntityAttribute" semanticCandidatesExpression="aql:self.attributes" domainClass="arkUIModel.EntityAttribute">
              <style xsi:type="style:SquareDescription" showIcon="false" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="20" arcHeight="20" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql:'自定义类'" roundedCorner="true" widthComputationExpression="10">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_purple']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="系统工具">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="工作流" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.WorkFlow" referenceName="workflows">
                  <subModelOperations xsi:type="tool:SetValue" featureName="flowName" valueExpression="aql:'function'"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function" variableName="instancef">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'start'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'Start'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="aql:instance"/>
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.StartOp" referenceName="operation" variableName="instances"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function" variableName="instancee">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'end'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'End'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="aql:instance"/>
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.EndOp" referenceName="operation" variableName="instancee"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="变量" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='OperationLibray']/@subNodeMappings[name='Parameter']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Parameter" referenceName="projectparameters">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'argument'+container.projectparameters->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="pType" valueExpression="string"/>
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="ParameterType">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation/>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                          <subModelOperations xsi:type="tool:If" conditionExpression="aql:instance.pType='string' or instance.pType='number' or instance.pType='boolean'">
                            <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TypeCS" referenceName="type" variableName="insTC">
                              <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:instance.pType"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool:If" conditionExpression="aql:instance.pType='class'">
                            <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Entity" referenceName="type" variableName="insTC">
                              <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:instance.pType"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool:If" conditionExpression="aql:instance.pType='array'">
                            <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Array" referenceName="type" variableName="insTC">
                              <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:instance.pType"/>
                              <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TypeCS" referenceName="atype" variableName="instancets">
                                <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'string'"/>
                              </subModelOperations>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool:If" conditionExpression="aql:instance.pType='callfun'">
                            <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.CallFun" referenceName="type" variableName="insTC">
                              <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:instance.pType"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:insTC"/>
                        </firstModelOperations>
                      </initialOperation>
                    </buttons>
                    <page name="ParameterType" labelExpression="Page" domainClass="arkUIModel.Parameter" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='变量']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.2/@groups.0"/>
                    <groups name="Default Group" labelExpression="Group" domainClass="arkUIModel.Parameter" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:TextDescription" name="name" labelExpression="aql:'变量名称'" valueExpression="aql:instance.name">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                            <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:TextDescription" name="Type" labelExpression="aql:'变量类型'" valueExpression="aql:instance.pType">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self"/>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:SelectDescription" labelExpression="变量类型：" valueExpression="aql:self.pType" candidatesExpression="aql:OrderedSet{'string', 'number', 'boolean','class','array','callfun'}+(self.eContainer().domainmodel.entity.name)" candidateDisplayExpression="aql:candidate">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool:SetValue" featureName="pType" valueExpression="aql:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:TextDescription" name="Value" labelExpression="aql:'初始值'" valueExpression="aql:instance.value">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                            <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="自定义类">
          <ownedTools xsi:type="tool_1:ContainerCreationDescription" name="自定义类" containerMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='DomainModel']/@subContainerMappings[name='Entity']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Entity" referenceName="entity">
                  <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'class'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'NewClass'"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="属性" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='DomainModel']/@subContainerMappings[name='Entity']/@subNodeMappings[name='EntityAttribute']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.EntityAttribute" referenceName="attributes">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'attribute'+self.eContainer().attributes->size()"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TypeCS" referenceName="type" variableName="instanceC">
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'string'"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="超类" precondition="aql:preTarget.differs(preSource)" edgeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@edgeMappings[name='SuperEntity']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool:SetValue" featureName="superEntity" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="类引用" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@edgeMappings[name='EntityRefrence']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:target">
                <subModelOperations xsi:type="tool:Switch">
                  <cases conditionExpression="aql:self.entityreference->exists( r | r.entity.name = source.name)">
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.EntityRefrence" referenceName="entityrefrence">
                        <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:source.name + 'to' + target.name"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="entity" valueExpression="var:target"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="Association"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:source">
                      <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.EntityRefrence" referenceName="entityrefrence">
                        <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:source.name + 'to' + target.name"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="entity" valueExpression="var:target"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="Association"/>
                      </subModelOperations>
                    </subModelOperations>
                  </default>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Connect Line">
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="SequenceLine" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@edgeMappings[name='FlowLine']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/sequence.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source.eContainer()">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:(source.eContainer().eAllContents(arkUIModel::FlowLine)->select(ac | ac.source=source)->size()=0))">
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:(not(source.functionType='End'))and (not(target.functionType='Start'))">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.FlowLine" referenceName="flowline">
                      <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'sequence'"/>
                      <subModelOperations xsi:type="tool:SetValue" featureName="value"/>
                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                        <subModelOperations xsi:type="tool:SetValue" featureName="source" valueExpression="aql:source"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="target" valueExpression="aql:target"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="ContinueLine" edgeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@edgeMappings[name='FlowLine']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/loop.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source.eContainer()">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:source.functionType='Loop'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.FlowLine" referenceName="flowline">
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'continue'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:'continue'"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:SetValue" featureName="source" valueExpression="aql:source"/>
                      <subModelOperations xsi:type="tool:SetValue" featureName="target" valueExpression="aql:target"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="ConditionLine" edgeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@edgeMappings[name='FlowLine']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/CaseOp.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source.eContainer()">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:source.functionType='Case'">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.FlowLine" referenceName="flowline">
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'condition'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="value"/>
                    <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                      <subModelOperations xsi:type="tool:SetValue" featureName="source" valueExpression="aql:source"/>
                      <subModelOperations xsi:type="tool:SetValue" featureName="target" valueExpression="aql:target"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:EdgeCreationDescription" name="ExceptionLine" edgeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@edgeMappings[name='FlowLine']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/exception.gif">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:source.eContainer()">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:(source.eContainer().eAllContents(arkUIModel::FlowLine)->select(ac | ac.type='exception' and ac.source=source)->size()=0)">
                  <subModelOperations xsi:type="tool:If" conditionExpression="aql:(source.functionType!='Start' and source.functionType!='End' and source.functionType!='Loop' and source.functionType!='Case')">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.FlowLine" referenceName="flowline">
                      <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'exception'"/>
                      <subModelOperations xsi:type="tool:SetValue" featureName="value"/>
                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                        <subModelOperations xsi:type="tool:SetValue" featureName="source" valueExpression="aql:source"/>
                        <subModelOperations xsi:type="tool:SetValue" featureName="target" valueExpression="aql:target"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Control Tool">
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Start" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/start.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eAllContents()->select(ac | ac.functionType='Start')->size()>0"/>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eAllContents()->select(ac | ac.functionType='Start')->size()&lt;1">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'start'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'Start'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.StartOp" referenceName="operation"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="End" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/stop.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:container.eAllContents()->select(ac | ac.functionType='End')->size()&lt;1">
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'end'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'End'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.EndOp" referenceName="operation"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Loop" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/LoopOp.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'loop'+container.eAllContents()->select(ac | ac.functionType='Loop')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'Loop'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.LoopOp" referenceName="operation" variableName="insloop">
                    <subModelOperations xsi:type="tool:SetValue" featureName="start" valueExpression="aql:'1'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="end" valueExpression="aql:'3'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="step" valueExpression="aql:'1'"/>
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Expression" referenceName="expression" variableName="insexp">
                      <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'exp'"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Case" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/CaseOp.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'case'+container.eAllContents()->select(ac | ac.functionType='Case')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'Case'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.CaseOp" referenceName="operation" variableName="insloop">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Expression" referenceName="expression" variableName="insexp">
                      <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'exp'"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="UI Operation" icon="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="SetParameter" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'setValue'+container.eAllContents()->select(ac | ac.functionType='SetParameter')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.SetParameter" referenceName="operation"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="GetParameter" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'getValue'+container.eAllContents()->select(ac | ac.functionType='GetParameter')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.GetParameter" referenceName="operation"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="RouteSkip" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'route'+container.eAllContents()->select(ac | ac.functionType='RouteSkip')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.RouteSkip" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'push'"/>
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="选择跳转页面">
                      <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                        <initialOperation/>
                      </buttons>
                      <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:container.eContainer().eContainer().rootpage.page->select(p|p.pageTitle=(container.eContainer().name))->first()">
                            <subModelOperations xsi:type="tool:SetValue" featureName="pageroute" valueExpression="aql:container.eContainer().eContainer().rootpage.page->select(p|p.pageTitle=(instance.page))->first()"/>
                          </firstModelOperations>
                        </initialOperation>
                      </buttons>
                      <page name="Default Page" labelExpression="Page" domainClass="arkUIModel.RouteSkip" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@toolSections.4/@ownedTools[name='RouteSkip']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.3/@subModelOperations.1/@groups.0"/>
                      <groups name="Default Group" labelExpression="Group" domainClass="arkUIModel.RouteSkip" semanticCandidateExpression="var:self">
                        <controls xsi:type="properties:TextDescription" valueExpression="aql:self.page">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self"/>
                          </initialOperation>
                        </controls>
                        <controls xsi:type="properties:SelectDescription" labelExpression="选择跳转页面：" valueExpression="aql:self.page" candidatesExpression="aql:self.eContainer().eContainer().eContainer().eContainer().rootpage.page->select(p|p.pageTitle!=(self.eContainer().workflow.eContainer().name))" candidateDisplayExpression="aql:candidate.pageTitle">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                              <subModelOperations xsi:type="tool:SetValue" featureName="page" valueExpression="aql:newValue.pageTitle"/>
                            </firstModelOperations>
                          </initialOperation>
                        </controls>
                      </groups>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="GetRouteValue" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'route'+container.eAllContents()->select(ac | ac.functionType='GetRouteValue')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.GetRouteValue" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="variable"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="Scroller" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'scroller'+container.eAllContents()->select(ac | ac.functionType='Scroller')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Scroller" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="assginScroll"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="scrollType"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="DataPreferences" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'datarefrences'+container.eAllContents()->select(ac | ac.functionType='DataPreferences')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.DataPreferences" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="preferencesType"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="preferences"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="TerminateSelf" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'terminateself'+container.eAllContents()->select(ac | ac.functionType='TerminateSelf')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TerminateSelf" referenceName="operation"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="OpenDialog" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'opendialog'+container.eAllContents()->select(ac | ac.functionType='OpenDialog')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.OpenDialog" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="assignDialog"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="CloseDialog" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'closedialog'+container.eAllContents()->select(ac | ac.functionType='CloseDialog')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.CloseDialog" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="assignDialog"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="SetTimeOut" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'settimeout'+container.eAllContents()->select(ac | ac.functionType='SetTimeOut')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.SetTimeOut" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="handler"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="delay" valueExpression="1000"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="ClearTimeOut" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'cleartimeout'+container.eAllContents()->select(ac | ac.functionType='ClearTimeOut')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ClearTimeOut" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="timeoutID"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="ShowToastOptions" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'showtoast'+container.eAllContents()->select(ac | ac.functionType='ShowToastOptions')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ShowToastOptions" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="message"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="duration"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="bottom"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:DeleteElementDescription">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:element.eAllContents(arkUIModel::RouteSkip)->size()>0">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:element.workflow.eContainer().eContainer().rootpage.page->select(p|p.pageTitle=(element.workflow.eContainer().name))->first()">
                    <subModelOperations xsi:type="tool:Unset" featureName="pageroute" elementExpression="aql:element.workflow.eContainer().eContainer().rootpage.page->select(p|p.pageTitle=(element.eAllContents(arkUIModel::RouteSkip)->first().page))->first()"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="ChangeIndex" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/UIOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'changeindex'+container.eAllContents()->select(ac | ac.functionType='ChangeIndex')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'UIOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.ChangeIndex" referenceName="operation"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Service Operation">
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="HttpOperation" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/SeviceOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'post'+container.eAllContents()->select(ac | ac.functionType='SeviceOperation')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'SeviceOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.HttpOperation" referenceName="operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="httpType" valueExpression="aql:'POST'"/>
                    <subModelOperations xsi:type="tool:SetValue" featureName="res" valueExpression="aql:'data.result'"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="WorkOperation" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/WorkFlow.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'工作流'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'SeviceOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.WorkOperation" referenceName="operation">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="New Dialog">
                      <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                        <initialOperation/>
                      </buttons>
                      <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                        <initialOperation/>
                      </buttons>
                      <page name="Default Page" labelExpression="Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@toolSections.5/@ownedTools[name='WorkOperation']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.3/@subModelOperations.0/@groups.0"/>
                      <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self">
                        <controls xsi:type="properties:SelectDescription" valueExpression="aql:instance.title" candidatesExpression="aql:self.eContainer().eContainer().eContainer().workflows.flowName" candidateDisplayExpression="aql:candidate">
                          <initialOperation>
                            <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:instance">
                              <subModelOperations xsi:type="tool:SetValue" featureName="title" valueExpression="aql:newValue"/>
                            </firstModelOperations>
                          </initialOperation>
                        </controls>
                      </groups>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Extra Operation">
          <ownedTools xsi:type="tool_1:NodeCreationDescription" name="CheckEqual" nodeMappings="//@ownedViewpoints[name='GUIModel']/@ownedRepresentations[name='UI%20Operation%20Diagram']/@defaultLayer/@containerMappings[name='WorkFlow']/@subNodeMappings[name='Function']" iconPath="/ArkUIModel.arkUIModel.edit/icons/full/sirius/ExtraOperation.gif">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Function" referenceName="function">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'equal'+container.eAllContents()->select(ac | ac.functionType='ExtraOperation')->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="functionType" valueExpression="aql:'ExtraOperation'"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="workflow" valueExpression="var:container"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.CheckEqual" referenceName="operation"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="ArkUI.design.Services"/>
  </ownedViewpoints>
  <extensions xsi:type="properties:ViewExtensionDescription" name="Function">
    <categories name="Default">
      <pages name="Function" labelExpression="Parameter" domainClass="arkUIModel.Function" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.1 //@extensions.0/@categories.0/@groups.2"/>
      <pages name="LoopFunction" labelExpression="Expression" domainClass="arkUIModel.Function" semanticCandidateExpression="var:self" preconditionExpression="aql:self.functionType='Loop'" groups="//@extensions.0/@categories.0/@groups.0"/>
      <pages name="CaseFunction" labelExpression="Expression" domainClass="arkUIModel.Function" semanticCandidateExpression="var:self" preconditionExpression="aql:self.functionType='Case'" groups="//@extensions.0/@categories.0/@groups.3"/>
      <groups name="LoopExp" labelExpression="Expression" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription" name="Start">
          <controls xsi:type="properties:TextDescription" labelExpression="开始:" valueExpression="aql:self.operation.start"/>
          <controls xsi:type="properties:SelectDescription" labelExpression="绑定变量:" valueExpression="aql:self.operation.start" candidatesExpression="aql:self.operation.contains.name" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.operation">
                <subModelOperations xsi:type="tool:SetValue" featureName="start" valueExpression="aql:'${'+newValue+'}'"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:TextDescription" labelExpression="结束:" valueExpression="aql:self.operation.end"/>
          <controls xsi:type="properties:SelectDescription" labelExpression="绑定变量:" valueExpression="aql:self.operation.end" candidatesExpression="aql:self.operation.contains.name" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.operation">
                <subModelOperations xsi:type="tool:SetValue" featureName="end" valueExpression="aql:'${'+newValue+'}'"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:TextDescription" labelExpression="步幅:" valueExpression="aql:self.operation.step">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self.operation">
                <subModelOperations xsi:type="tool:SetValue" featureName="step" valueExpression="aql:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="5"/>
        </controls>
        <controls xsi:type="properties:ContainerDescription" name="Expression">
          <controls xsi:type="properties:DynamicMappingForDescription" iterator="expression" iterableExpression="aql:self.operation.expression" forceRefresh="true">
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="变量:" valueExpression="aql:self.operation.expression.parameter" candidatesExpression="aql:self.operation.contains.name" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.operation.expression">
                    <subModelOperations xsi:type="tool:SetValue" featureName="parameter" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
                <style/>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="选择:" valueExpression="aql:self.operation.expression.condition" candidatesExpression="aql:OrderedSet{'','=','!=','>','>=','&lt;','&lt;='}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.operation.expression">
                    <subModelOperations xsi:type="tool:SetValue" featureName="condition" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="变量:" valueExpression="aql:self.operation.expression.value" candidatesExpression="aql:self.operation.contains.name" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.operation.expression">
                    <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="8"/>
        </controls>
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:TextDescription" labelExpression="表达式：" valueExpression="aql:self.operation.expression.expressText">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.operation.expression">
                <subModelOperations xsi:type="tool:SetValue" featureName="expressText" valueExpression="aql:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:ButtonDescription" buttonLabelExpression="生成">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.operation.expression">
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.condition=''">
                  <subModelOperations xsi:type="tool:SetValue" featureName="expressText" valueExpression="aql:'for( var i ='+self.eContainer().start +';i&lt;'+self.eContainer().end+';'+'i=i+'+self.eContainer().step+')'"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:not(self.condition='')">
                  <subModelOperations xsi:type="tool:SetValue" featureName="expressText" valueExpression="aql:'for( var i ='+self.eContainer().start +';i&lt;'+self.eContainer().end+','+self.parameter+self.condition+self.value+';'+'i=i+'+self.eContainer().step+')'"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="2"/>
        </controls>
      </groups>
      <groups name="InputGroup" labelExpression="InputList:" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription" name="In">
          <controls xsi:type="properties:DynamicMappingForDescription" iterator="feature" iterableExpression="aql:if ((self.functionType='UIOperation') or (self.functionType='ExtraOperation')  or (self.functionType='SeviceOperation' ))  then self.operation.eClass().eAllStructuralFeatures  else OrderedSet{} endif">
            <ifs predicateExpression="aql:not(feature.name='contains' or feature.name='returntype')">
              <widget xsi:type="properties:TextDescription" labelExpression="aql:'参数名'+feature.name+':'" valueExpression="aql:self.operation.eGet(feature.name)">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:(not(feature.name='contains' or feature.name='returntype') and self.eContainer().eContainer().eClass().name='OperationLibray')">
              <widget xsi:type="properties:SelectDescription" labelExpression="绑定参数:" valueExpression="aql:expression.parameter" candidatesExpression="aql:self.workflow.eInverse(arkUIModel::OperationLibray).projectparameters.name" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="aql:'${'+newValue+'}'"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:(not(feature.name='contains' or feature.name='returntype') and self.eContainer().eContainer().eClass().name='UILogic')">
              <widget xsi:type="properties:SelectDescription" labelExpression="绑定参数:" valueExpression="aql:expression.parameter" candidatesExpression="aql:self.workflow.eInverse(arkUIModel::UILogic).pageparameter.name" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.operation">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="aql:'${'+newValue+'}'"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="2"/>
        </controls>
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:DynamicMappingForDescription" iterator="returntype" iterableExpression="aql:self.operation.contains" forceRefresh="true">
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:TextDescription" labelExpression="参数名:" valueExpression="aql:returntype.name">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:returntype">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:TextDescription" labelExpression="值:" valueExpression="aql:returntype.value">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:returntype">
                    <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="绑定参数:" valueExpression="aql:returntype.value" candidatesExpression="aql:self.workflow.eInverse(arkUIModel::UILogic).pageparameter.name" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:returntype">
                    <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:'${'+newValue+'}'"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:ButtonDescription" buttonLabelExpression="Delete Input">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:returntype">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
          <controls xsi:type="properties:ButtonDescription" buttonLabelExpression="Add Input">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.operation">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Parameter" referenceName="contains">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'input'+self.eContainer().contains->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="pType" valueExpression="string"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="parameterType" valueExpression="input"/>
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="ParameterType">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation/>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                          <subModelOperations xsi:type="tool:If" conditionExpression="aql:instance.pType='string' or instance.pType='number' or instance.pType='boolean'">
                            <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TypeCS" referenceName="type" variableName="insTC">
                              <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:instance.pType"/>
                              <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:instance.value"/>
                              <subModelOperations xsi:type="tool:SetValue" featureName="assign" valueExpression="aql:instance.assign"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool:If" conditionExpression="aql:instance.pType='class'">
                            <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Entity" referenceName="type" variableName="insTC">
                              <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:instance.pType"/>
                              <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:instance.value"/>
                              <subModelOperations xsi:type="tool:SetValue" featureName="assign" valueExpression="aql:instance.assign"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool:If" conditionExpression="aql:instance.pType='array'">
                            <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Array" referenceName="type" variableName="insTC">
                              <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:instance.pType"/>
                              <subModelOperations xsi:type="tool:SetValue" featureName="assign" valueExpression="aql:instance.assign"/>
                              <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:instance.value"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:insTC"/>
                        </firstModelOperations>
                      </initialOperation>
                    </buttons>
                    <page name="ParameterType" labelExpression="Page" domainClass="arkUIModel.Parameter" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.1/@controls.1/@controls.1/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.3/@groups.0"/>
                    <groups name="Default Group" labelExpression="Group" domainClass="arkUIModel.Parameter" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:TextDescription" name="name" labelExpression="aql:'变量名称'" valueExpression="aql:instance.name">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                            <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:TextDescription" name="Type" labelExpression="aql:'变量类型'" valueExpression="aql:instance.pType">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self"/>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:SelectDescription" labelExpression="变量类型：" valueExpression="aql:self.pType" candidatesExpression="aql:OrderedSet{'string', 'number', 'boolean','class','array','callfun','Resource'}+(self.eContainer().eContainer().eContainer().eContainer().eContainer().operationlibray.domainmodel.entity.name)" candidateDisplayExpression="aql:candidate">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool:SetValue" featureName="pType" valueExpression="aql:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:TextDescription" name="Value" labelExpression="aql:'初始值'" valueExpression="aql:instance.value">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                            <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:SelectDescription" labelExpression="绑定变量:" valueExpression="aql:self.value" candidatesExpression="aql:self.eContainer().eContainer().eContainer().eContainer().pageparameter.name" candidateDisplayExpression="aql:candidate">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:'${'+newValue+'}'"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="4"/>
        </controls>
      </groups>
      <groups name="OutputGroup" labelExpression="OutputList:" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription" name="Out">
          <controls xsi:type="properties:DynamicMappingForDescription" iterator="returntype" iterableExpression="aql:self.operation.returntype" forceRefresh="true">
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:TextDescription" labelExpression="name:" valueExpression="aql:returntype.name">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:returntype">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:TextDescription" labelExpression="value:" valueExpression="aql:returntype.value">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:returntype">
                    <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="绑定参数:" valueExpression="aql:returntype.value" candidatesExpression="aql:self.workflow.eInverse(arkUIModel::UILogic).pageparameter.name" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:returntype">
                    <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:'${'+newValue+'}'"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:ButtonDescription" buttonLabelExpression="Delete Output">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:returntype">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
          <controls xsi:type="properties:ButtonDescription" buttonLabelExpression="Add Output">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.operation">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Parameter" referenceName="returntype">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'output'+self.eContainer().returntype->size()"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="pType" valueExpression="string"/>
                  <subModelOperations xsi:type="tool:SetValue" featureName="parameterType" valueExpression="output"/>
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="ParameterType">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation/>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:instance">
                          <subModelOperations xsi:type="tool:If" conditionExpression="aql:instance.pType='string' or instance.pType='number' or instance.pType='boolean' or instance.pType='Resource'">
                            <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TypeCS" referenceName="type" variableName="insTC">
                              <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:instance.pType"/>
                              <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:instance.value"/>
                              <subModelOperations xsi:type="tool:SetValue" featureName="assign" valueExpression="aql:instance.assign"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool:If" conditionExpression="aql:instance.pType='class'">
                            <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Entity" referenceName="type" variableName="insTC">
                              <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:instance.pType"/>
                              <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:instance.value"/>
                              <subModelOperations xsi:type="tool:SetValue" featureName="assign" valueExpression="aql:instance.assign"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool:If" conditionExpression="aql:instance.pType='array'">
                            <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Array" referenceName="type" variableName="insTC">
                              <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:instance.pType"/>
                              <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:instance.value"/>
                              <subModelOperations xsi:type="tool:SetValue" featureName="assign" valueExpression="aql:instance.assign"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:insTC"/>
                        </firstModelOperations>
                      </initialOperation>
                    </buttons>
                    <page name="ParameterType" labelExpression="Page" domainClass="arkUIModel.Parameter" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.2/@controls.0/@controls.1/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.3/@groups.0"/>
                    <groups name="Default Group" labelExpression="Group" domainClass="arkUIModel.Parameter" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:TextDescription" name="name" labelExpression="aql:'变量名称'" valueExpression="aql:instance.name">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                            <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:TextDescription" name="Type" labelExpression="aql:'变量类型'" valueExpression="aql:instance.pType">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self"/>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:SelectDescription" labelExpression="变量类型：" valueExpression="aql:self.pType" candidatesExpression="aql:OrderedSet{'string', 'number', 'boolean','class','array','callfun'}+(self.eContainer().eContainer().eContainer().eContainer().eContainer().operationlibray.domainmodel.entity.name)" candidateDisplayExpression="aql:candidate">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool:SetValue" featureName="pType" valueExpression="aql:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:TextDescription" name="Value" labelExpression="aql:'初始值'" valueExpression="aql:instance.value">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                            <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:SelectDescription" labelExpression="绑定变量:" valueExpression="aql:self.value" candidatesExpression="aql:self.eContainer().eContainer().eContainer().eContainer().pageparameter.name" candidateDisplayExpression="aql:candidate">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                            <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:'${'+newValue+'}'"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="6"/>
        </controls>
      </groups>
      <groups name="CaseExp" labelExpression="Expression" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription" name="Expression">
          <controls xsi:type="properties:DynamicMappingForDescription" iterator="expression" iterableExpression="aql:self.operation.expression" forceRefresh="true">
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:TextDescription" labelExpression="表达式:" valueExpression="aql:expression.name">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:expression">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="参数:" valueExpression="aql:expression.parameter" candidatesExpression="aql:self.operation.contains.name" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:expression">
                    <subModelOperations xsi:type="tool:SetValue" featureName="parameter" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="选择:" valueExpression="aql:expression.condition" candidatesExpression="aql:OrderedSet{'=','!=','>','>=','&lt;','&lt;='}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:expression">
                    <subModelOperations xsi:type="tool:SetValue" featureName="condition" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
                <style/>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:TextDescription" labelExpression="值:" valueExpression="aql:expression.value">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:expression">
                    <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="绑定变量:" valueExpression="aql:expression.value" candidatesExpression="aql:self.operation.contains.name" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:expression">
                    <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:'${'+newValue+'}'"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="选择:" valueExpression="aql:expression.union.toString()" candidatesExpression="aql:OrderedSet{'','and','or','not'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:expression">
                    <subModelOperations xsi:type="tool:SetValue" featureName="union" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:TextDescription" labelExpression="表达式内容：" valueExpression="aql:expression.expressText">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:expression">
                    <subModelOperations xsi:type="tool:SetValue" featureName="expressText" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:ButtonDescription" buttonLabelExpression="生成">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:expression">
                    <subModelOperations xsi:type="tool:SetValue" featureName="expressText" valueExpression="aql:'('+expression.parameter+expression.condition+expression.value+')'"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:ButtonDescription" buttonLabelExpression="删除表达式">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:expression">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:ButtonDescription" buttonLabelExpression="嵌套表达式">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:expression.eContainer()">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Expression" referenceName="expression">
                      <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:expression.name"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="10"/>
        </controls>
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:ButtonDescription" buttonLabelExpression="添加新表达式">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.operation">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Expression" referenceName="expression">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'exp'+self.eContainer().expression->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </controls>
        </controls>
      </groups>
    </categories>
  </extensions>
  <extensions xsi:type="properties:ViewExtensionDescription" name="Case Properties">
    <categories name="Default Category">
      <pages name="Default Page" labelExpression="Expression" domainClass="arkUIModel.CaseOp" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.3"/>
    </categories>
  </extensions>
  <extensions xsi:type="properties:ViewExtensionDescription" name="Parameter">
    <categories name="Attribution Category">
      <pages name="Parameter" labelExpression="Attribution" domainClass="arkUIModel.Parameter" semanticCandidateExpression="aql:self" preconditionExpression="aql:self.pType='class'" groups="//@extensions.2/@categories.0/@groups.0"/>
      <pages name="Array Parameter" labelExpression="Attribution" domainClass="arkUIModel.Parameter" semanticCandidateExpression="aql:self" preconditionExpression="aql:self.pType='array'" groups="//@extensions.2/@categories.0/@groups.1"/>
      <pages name="Call Parameter" labelExpression="Attribution" domainClass="arkUIModel.Parameter" semanticCandidateExpression="aql:self" preconditionExpression="aql:self.pType='callfun'" groups="//@extensions.2/@categories.0/@groups.2"/>
      <groups name="Attribution Group" labelExpression="Attribution" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:DynamicMappingForDescription" iterator="attribute" iterableExpression="aql:self.type.attributes" forceRefresh="true">
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:TextDescription" labelExpression="name：" valueExpression="aql:attribute.name"/>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:TextDescription" isEnabledExpression="aql:false" valueExpression="aql:attribute.type.type"/>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="type:" valueExpression="aql:attribute.type.type" candidatesExpression="aql:OrderedSet{'string', 'number', 'boolean','class','array','callfun','Resource','CustomDialogController'}+(self.eContainer().eContainer().operationlibray.domainmodel.entity.name)" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:attribute.type">
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:ButtonDescription" buttonLabelExpression="删除">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:attribute">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
          <controls xsi:type="properties:ButtonDescription" buttonLabelExpression="增加">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.type">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.EntityAttribute" referenceName="attributes">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'attribute'+self.eContainer().attributes->size()"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TypeCS" referenceName="type">
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'string'"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="4"/>
        </controls>
      </groups>
      <groups name="Array Attribution Group" labelExpression="Attribution" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:TextDescription" labelExpression="name：" valueExpression="aql:self.name"/>
          <controls xsi:type="properties:TextDescription" labelExpression="长度：" valueExpression="aql:self.type.length">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.type">
                <subModelOperations xsi:type="tool:SetValue" featureName="length" valueExpression="aql:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" labelExpression="数组类型：" valueExpression="aql:self.type.atype.type" candidatesExpression="aql:OrderedSet{'string', 'number', 'boolean','class','array','callfun','Resource'}+(self.eContainer().eContainer().operationlibray.domainmodel.entity.name)" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.type.atype">
                <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="4"/>
        </controls>
      </groups>
      <groups name="Call Attribution Group" labelExpression="Attribution" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:TextDescription" labelExpression="变量名：" isEnabledExpression="aql:false" valueExpression="aql:self.name">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:TextDescription" labelExpression="变量类型：" isEnabledExpression="aql:false" valueExpression="aql:self.pType">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:TextDescription" labelExpression="工作流：" isEnabledExpression="aql:false" valueExpression="aql:self.type.name">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self"/>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" valueExpression="aql:self.type.name" candidatesExpression="aql:self.eContainer().workflow.flowName" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.type">
                <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="4"/>
        </controls>
      </groups>
    </categories>
  </extensions>
  <extensions xsi:type="properties:ViewExtensionDescription" name="PageRefrence">
    <categories name="Attribution Category">
      <pages name="PageRefrence" labelExpression="Attribution" domainClass="arkUIModel.PageRefrence" semanticCandidateExpression="aql:self" groups="//@extensions.3/@categories.0/@groups.0"/>
      <groups name="Attribution Group" labelExpression="Attribution" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:DynamicMappingForDescription" iterator="attribute" iterableExpression="aql:self.parameter" forceRefresh="true">
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:TextDescription" labelExpression="name：" valueExpression="aql:attribute.name"/>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:TextDescription" labelExpression="初始值：" valueExpression="aql:attribute.value">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:attribute">
                    <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="绑定:" valueExpression="aql:attribute.assign" candidatesExpression="aql:self.eContainer().root.eContainer().eInverse(arkUIModel::Page)->first().uilogic.pageparameter.name->including(self.foreach.item)" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:attribute">
                    <subModelOperations xsi:type="tool:SetValue" featureName="assign" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:ButtonDescription" buttonLabelExpression="删除">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:attribute">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
          <controls xsi:type="properties:ButtonDescription" buttonLabelExpression="初始化变量">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Parameter" referenceName="parameter">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="New Dialog">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation/>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation/>
                    </buttons>
                    <page name="Default Page" labelExpression="Page" domainClass="arkUIModel.Parameter" semanticCandidateExpression="var:self" groups="//@extensions.3/@categories.0/@groups.0/@controls.0/@controls.1/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                    <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:SelectDescription" valueExpression="aql:instance.name" candidatesExpression="aql:self.eContainer().eContainer().root.eContainer().eContainer().rootpage.page->select(ac|ac.pageTitle=self.eContainer().name)->first().uilogic.pageparameter.name" candidateDisplayExpression="aql:candidate">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:instance">
                            <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="4"/>
        </controls>
      </groups>
    </categories>
    <categories name="Event Category">
      <pages name="PageRefrence" labelExpression="Event" domainClass="arkUIModel.PageRefrence" semanticCandidateExpression="aql:self" groups="//@extensions.3/@categories.1/@groups.0"/>
      <groups name="Event Group" labelExpression="Trigger Event" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription" name="Event">
          <controls xsi:type="properties:DynamicMappingForDescription" iterator="feature" iterableExpression="aql:self.eContents(arkUIModel::Event).eClass().eAllStructuralFeatures">
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:feature.name+'绑定工作流:'" valueExpression="aql:self.eGet(feature.name)" candidatesExpression="aql:self.eContainer().root.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.eContainer().root.eContainer()->last().name).eAllContents(arkUIModel::WorkFlow).flowName->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
        </controls>
      </groups>
    </categories>
  </extensions>
  <extensions xsi:type="properties:ViewExtensionDescription" name="FlowLine">
    <categories name="Attribution Category">
      <pages name="FlowLine" labelExpression="Attribution" domainClass="arkUIModel.FlowLine" semanticCandidateExpression="aql:self" preconditionExpression="aql:(self.type+'')='condition'" groups="//@extensions.4/@categories.0/@groups.0"/>
      <groups name="Attribution Group" labelExpression="Attribution" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:TextDescription" labelExpression="表达式：" valueExpression="aql:self.value"/>
          <controls xsi:type="properties:SelectDescription" labelExpression="选择表达式:" valueExpression="aql:self.value" candidatesExpression="aql:self.source.operation.expression.name" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="4"/>
        </controls>
      </groups>
    </categories>
  </extensions>
  <extensions xsi:type="properties:ViewExtensionDescription" name="DomainClass">
    <categories name="Attribution Category">
      <pages name="Entity" labelExpression="Attribution" domainClass="arkUIModel.Entity" semanticCandidateExpression="aql:self" groups="//@extensions.5/@categories.0/@groups.0"/>
      <groups name="Attribution Group" labelExpression="Attribution" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:DynamicMappingForDescription" iterator="attribute" iterableExpression="aql:self.attributes" forceRefresh="true">
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:TextDescription" labelExpression="name：" valueExpression="aql:attribute.name"/>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:TextDescription" isEnabledExpression="aql:false" valueExpression="aql:attribute.type.type"/>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="type:" valueExpression="aql:attribute.type.type" candidatesExpression="aql:OrderedSet{'','number', 'string','boolean','array','Resource','any','Date'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:attribute.type">
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:ButtonDescription" buttonLabelExpression="删除">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:attribute">
                    <subModelOperations xsi:type="tool:RemoveElement"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
          <controls xsi:type="properties:ButtonDescription" buttonLabelExpression="增加">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.type">
                <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.EntityAttribute" referenceName="attributes">
                  <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:'attribute'+self.eContainer().attributes->size()"/>
                  <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.TypeCS" referenceName="type">
                    <subModelOperations xsi:type="tool:SetValue" featureName="type" valueExpression="aql:'string'"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="4"/>
        </controls>
      </groups>
    </categories>
  </extensions>
  <extensions xsi:type="properties:ViewExtensionDescription" name="IF">
    <categories name="Default Category">
      <pages name="IF" labelExpression="Expression" domainClass="arkUIModel.IF" semanticCandidateExpression="var:self" groups="//@extensions.6/@categories.0/@groups.0"/>
      <groups name="Default Group" labelExpression="Expression" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:DynamicMappingForDescription" iterator="expression" iterableExpression="aql:self.expression" forceRefresh="true">
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:TextDescription" labelExpression="表达式:" valueExpression="aql:expression.name">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:expression">
                    <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="参数:" valueExpression="aql:expression.parameter" candidatesExpression="aql:if self.eContainer().eContainer().eClass().name='PageRefrence' then self.eContainer().eContainer().eContainer().root.eContainer().eInverse(arkUIModel::Page).uilogic.pageparameter.name  else self.eContainer().root.eContainer().eInverse(arkUIModel::Page).uilogic.pageparameter.name endif" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:expression">
                    <subModelOperations xsi:type="tool:SetValue" featureName="parameter" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="选择:" valueExpression="aql:expression.condition" candidatesExpression="aql:OrderedSet{'=','!=','>','>=','&lt;','&lt;='}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:expression">
                    <subModelOperations xsi:type="tool:SetValue" featureName="condition" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
                <style/>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:TextDescription" labelExpression="值:" valueExpression="aql:expression.value">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:expression">
                    <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="绑定变量:" valueExpression="aql:expression.value" candidatesExpression="aql:if self.eContainer().eContainer().eClass().name='PageRefrence'  then self.eContainer().eContainer().eContainer().root.eContainer().eInverse(arkUIModel::Page).uilogic.pageparameter.name  else self.eContainer().root.eContainer().eInverse(arkUIModel::Page).uilogic.pageparameter.name endif" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:expression">
                    <subModelOperations xsi:type="tool:SetValue" featureName="value" valueExpression="aql:'${'+newValue+'}'"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="选择:" valueExpression="aql:expression.union.toString()" candidatesExpression="aql:OrderedSet{'','and','or','not'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:expression">
                    <subModelOperations xsi:type="tool:SetValue" featureName="union" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:ButtonDescription" buttonLabelExpression="删除表达式">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:expression">
                    <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.eContainer().expression->size()>1">
                      <subModelOperations xsi:type="tool:RemoveElement"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:ButtonDescription" buttonLabelExpression="嵌套表达式">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:expression.eContainer()">
                    <subModelOperations xsi:type="tool:CreateInstance" typeName="arkUIModel.Expression" referenceName="expression">
                      <subModelOperations xsi:type="tool:SetValue" featureName="name" valueExpression="aql:expression.name"/>
                    </subModelOperations>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="10"/>
        </controls>
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:TextDescription" labelExpression="表达式内容：" valueExpression="aql:self.autoExpression">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool:SetValue" featureName="autoExpression" valueExpression="aql:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:ButtonDescription" buttonLabelExpression="生成">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool:SetValue" featureName="autoExpression" valueExpression="aql:''"/>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.expression->size()=1">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="autoExpression" valueExpression="aql:'('+self.expression->first().parameter+self.expression->first().condition+self.expression->first().value+')'"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.expression->size()>1">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:For" expression="aql:self.expression" iteratorName="expression">
                      <subModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContainer()">
                        <subModelOperations xsi:type="tool:SetValue" featureName="autoExpression" valueExpression="aql:self.autoExpression+'('+expression.parameter+expression.condition+expression.value+')'+expression.union"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="2"/>
        </controls>
      </groups>
    </categories>
  </extensions>
  <extensions xsi:type="properties:ViewExtensionDescription" name="ForEach">
    <categories name="Default Category">
      <pages name="ForEach" labelExpression="Expression" domainClass="arkUIModel.ForEach" semanticCandidateExpression="var:self" groups="//@extensions.7/@categories.0/@groups.0"/>
      <groups name="Default Group" labelExpression="Expression" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:TextDescription" labelExpression="Item：" helpExpression="遍历数组项" valueExpression="aql:self.item">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool:SetValue" featureName="item" valueExpression="aql:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" labelExpression="绑定数组：" valueExpression="aql:self.array" candidatesExpression="aql:if self.eContainer().eClass().name='PageRefrence'  then self.eContainer().eContainer().root.eContainer().eInverse(arkUIModel::Page).uilogic.pageparameter->select(ac|ac.pType='array').name  else self.eContainer().root.eContainer().eInverse(arkUIModel::Page).uilogic.pageparameter->select(ac|ac.pType='array').name endif" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool:SetValue" featureName="array" valueExpression="aql:newValue"/>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.eContainer().root.eContainer().eInverse(arkUIModel::Page).uilogic.pageparameter->select(ac|ac.pType='array')->select(p|p.name=newValue)->size()>0">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="arrayType" valueExpression="aql:self.eContainer().root.eContainer().eInverse(arkUIModel::Page).uilogic.pageparameter->select(ac|ac.pType='array')->select(p|p.name=newValue)->first().type.atype.type.toString()"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool:If" conditionExpression="aql:self.eContainer().root.eContainer().eInverse(arkUIModel::Page).uilogic.pageparameter->select(ac|ac.pType='array')->select(p|p.name=newValue)->size()=0">
                  <subModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="arrayType" valueExpression="aql:self.eContainer().eContainer().root.eContainer().eInverse(arkUIModel::Page).uilogic.pageparameter->select(ac|ac.pType='array')->select(p|p.name=newValue)->first().type.atype.type.toString()"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="10"/>
        </controls>
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:TextDescription" labelExpression="Item表达式：" helpExpression="foreach Key" valueExpression="aql:self.expression">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool:SetValue" featureName="expression" valueExpression="aql:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:ButtonDescription" buttonLabelExpression="生成">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool:SetValue" featureName="expression" valueExpression="aql:'this.'+self.array+','+'(item: any, index ?: '+self.arrayType+')'"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="10"/>
        </controls>
      </groups>
    </categories>
  </extensions>
  <extensions xsi:type="properties:ViewExtensionDescription" name="Page">
    <categories name="Attribution Category">
      <pages name="PageStruct" labelExpression="Event" domainClass="arkUIModel.PageStruct" semanticCandidateExpression="aql:self" groups="//@extensions.8/@categories.0/@groups.0"/>
      <groups name="Attribution Group" labelExpression="Attribution" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription" name="Event">
          <controls xsi:type="properties:SelectDescription" name="onPageHide" labelExpression="aql:'onPageHide : '" valueExpression="aql:self.pageevent.onPageHide" candidatesExpression="aql:self.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.eContainer()->last().name).eAllContents(arkUIModel::WorkFlow).flowName->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.pageevent">
                <subModelOperations xsi:type="tool:SetValue" featureName="onPageHide" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" name="aboutToAppear" labelExpression="aql:'aboutToAppear : '" valueExpression="aql:self.pageevent.aboutToAppear" candidatesExpression="aql:self.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.eContainer()->last().name).eAllContents(arkUIModel::WorkFlow).flowName->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.pageevent">
                <subModelOperations xsi:type="tool:SetValue" featureName="aboutToAppear" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" name="onPageShow" labelExpression="aql:'onPageShow : '" valueExpression="aql:self.pageevent.onPageShow" candidatesExpression="aql:self.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.eContainer()->last().name).eAllContents(arkUIModel::WorkFlow).flowName->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.pageevent">
                <subModelOperations xsi:type="tool:SetValue" featureName="onPageShow" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" name="onBackPress" labelExpression="aql:'onBackPress: '" valueExpression="aql:self.pageevent.onBackPress" candidatesExpression="aql:self.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.eContainer()->last().name).eAllContents(arkUIModel::WorkFlow).flowName->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.pageevent">
                <subModelOperations xsi:type="tool:SetValue" featureName="onBackPress" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" name="aboutToDisappear" labelExpression="aql:'aboutToDisappear : '" valueExpression="aql:self.pageevent.aboutToDisappear" candidatesExpression="aql:self.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.eContainer()->last().name).eAllContents(arkUIModel::WorkFlow).flowName->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.pageevent">
                <subModelOperations xsi:type="tool:SetValue" featureName="aboutToDisappear" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" name="onClick" labelExpression="aql:'onClick : '" valueExpression="aql:self.pageevent.onClick" candidatesExpression="aql:self.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.eContainer()->last().name).eAllContents(arkUIModel::WorkFlow).flowName->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.pageevent">
                <subModelOperations xsi:type="tool:SetValue" featureName="onClick" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" name="onTouch" labelExpression="aql:'Ontouch : '" valueExpression="aql:self.pageevent.onTouch" candidatesExpression="aql:self.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.eContainer()->last().name).eAllContents(arkUIModel::WorkFlow).flowName->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.pageevent">
                <subModelOperations xsi:type="tool:SetValue" featureName="onTouch" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" name="onDragStart" labelExpression="aql:'onDragStart : '" valueExpression="aql:self.pageevent.onDragStart" candidatesExpression="aql:self.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.eContainer()->last().name).eAllContents(arkUIModel::WorkFlow).flowName->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.pageevent">
                <subModelOperations xsi:type="tool:SetValue" featureName="onDragStart" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" name="onDragEnter" labelExpression="aql:'onDragEnter : '" valueExpression="aql:self.pageevent.onDragEnter" candidatesExpression="aql:self.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.eContainer()->last().name).eAllContents(arkUIModel::WorkFlow).flowName->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.pageevent">
                <subModelOperations xsi:type="tool:SetValue" featureName="onDragEnter" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" name="onDragMove" labelExpression="aql:'onDragMove : '" valueExpression="aql:self.pageevent.onDragMove" candidatesExpression="aql:self.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.eContainer()->last().name).eAllContents(arkUIModel::WorkFlow).flowName->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.pageevent">
                <subModelOperations xsi:type="tool:SetValue" featureName="onDragMove" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" name="onDragLeave" labelExpression="aql:'onDragLeave : '" valueExpression="aql:self.pageevent.onDragLeave" candidatesExpression="aql:self.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.eContainer()->last().name).eAllContents(arkUIModel::WorkFlow).flowName->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.pageevent">
                <subModelOperations xsi:type="tool:SetValue" featureName="onDragLeave" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" name="onDrop" labelExpression="aql:'onDrop : '" valueExpression="aql:self.pageevent.onDrop" candidatesExpression="aql:self.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.eContainer()->last().name).eAllContents(arkUIModel::WorkFlow).flowName->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.pageevent">
                <subModelOperations xsi:type="tool:SetValue" featureName="onDrop" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" name="onAppear" labelExpression="aql:'onAppear : '" valueExpression="aql:self.pageevent.onAppear" candidatesExpression="aql:self.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.eContainer()->last().name).eAllContents(arkUIModel::WorkFlow).flowName->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.pageevent">
                <subModelOperations xsi:type="tool:SetValue" featureName="onAppear" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" name="onDisAppear" labelExpression="aql:'onDisAppear : '" valueExpression="aql:self.pageevent.onDisAppear" candidatesExpression="aql:self.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.eContainer()->last().name).eAllContents(arkUIModel::WorkFlow).flowName->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.pageevent">
                <subModelOperations xsi:type="tool:SetValue" featureName="onDisAppear" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" name="onAreaChange" labelExpression="aql:'onAreaChange : '" valueExpression="aql:self.pageevent.onAreaChange" candidatesExpression="aql:self.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.eContainer()->last().name).eAllContents(arkUIModel::WorkFlow).flowName->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.pageevent">
                <subModelOperations xsi:type="tool:SetValue" featureName="onAreaChange" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
        </controls>
      </groups>
    </categories>
  </extensions>
  <extensions xsi:type="properties:ViewExtensionDescription" name="UIComponentProperties">
    <categories name="Attribution Category">
      <pages name="Container" labelExpression="Attribution" domainClass="arkUIModel.UIComponent" semanticCandidateExpression="aql:self" preconditionExpression="aql:self.widgetType='Container'" groups="//@extensions.9/@categories.0/@groups.0"/>
      <pages name="Widget" labelExpression="Attribution" domainClass="arkUIModel.UIComponent" semanticCandidateExpression="aql:self" preconditionExpression="aql:self.widgetType='Widget'" groups="//@extensions.9/@categories.0/@groups.1"/>
      <groups name="Container Attribution Group" labelExpression="Attribution" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription" name="Required attributes">
          <controls xsi:type="properties:TextDescription" labelExpression="aql:'控件名称 : '" valueExpression="aql:self.id">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:LabelDescription"/>
          <controls xsi:type="properties:LabelDescription" labelExpression="-------------------------------------------------基本属性---------------------------------------------------------------"/>
          <controls xsi:type="properties:LabelDescription"/>
          <controls xsi:type="properties:DynamicMappingForDescription" iterator="feature" iterableExpression="aql:self.eClass().eAllStructuralFeatures->select(p|p.eClass().name='EAttribute')">
            <ifs predicateExpression="aql:not(feature.name='id' or feature.name='widgetType' or feature.name='name' or feature.name='direction' or feature.name='wrap' or feature.name='justifyContent' or feature.name='alignItems' or feature.name='alignContent'  or feature.name='barPosition'  or feature.name='sizeType'  )">
              <widget xsi:type="properties:TextDescription" labelExpression="aql:'属性'+feature.name+':'" valueExpression="aql:self.eGet(feature.name)">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='justifyContent'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'水平对齐方式 : '" valueExpression="aql:self.justifyContent" candidatesExpression="aql:OrderedSet{'', 'Start', 'Center','End','SpaceBetween','SpaceAround','SpaceEvenly'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='alignItems'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'纵轴对齐方式 : '" valueExpression="aql:self.alignItems" candidatesExpression="aql:OrderedSet{'','Start', 'Center', 'End'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='direction'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'排列方向 : '" valueExpression="aql:self.direction" candidatesExpression="aql:OrderedSet{'','Row', 'RowReverse', 'Column','ColumnReverse'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='wrap'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'多行排列 : '" valueExpression="aql:self.wrap" candidatesExpression="aql:OrderedSet{'','NoWrap', 'Wrap', 'WrapReverse'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='assignalignContent'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'额外对齐方式 : '" valueExpression="aql:self.assignalignContent" candidatesExpression="aql:OrderedSet{'','Start', 'Center','End','SpaceBetween','SpaceAround','SpaceEvenly'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='barPosition'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'Tabs 容器组件， BarPosition 定义了以下两种类型'" valueExpression="aql:self.barPosition" candidatesExpression="aql:OrderedSet{'','Start', 'End'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='sizeType'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'设置选用设备宽度类型'" valueExpression="aql:self.sizeType" candidatesExpression="aql:OrderedSet{'Auto','XS', 'SM', 'MD','LG'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:not(feature.name='id' or feature.name='widgetType' or feature.name='name' )">
              <widget xsi:type="properties:SelectDescription" labelExpression="绑定参数:" valueExpression="aql:self.eGet(feature.name)" candidatesExpression="aql:self.root.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.root.eContainer()->last().name).eAllContents(arkUIModel::Parameter).name->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="aql:'${'+newValue+'}'"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
          <controls xsi:type="properties:LabelDescription" labelExpression="-------------------------------------------------样式绑定---------------------------------------------------------------"/>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="2"/>
        </controls>
        <controls xsi:type="properties:ContainerDescription" name="Style assign">
          <controls xsi:type="properties:DynamicMappingForDescription" iterator="feature" iterableExpression="aql:self.eClass().eAllStructuralFeatures->select(p|p.eClass().name='EReference')">
            <ifs predicateExpression="aql:(feature.name.contains('style'))">
              <widget xsi:type="properties:SelectDescription" name="assignstyle" labelExpression="aql:'绑定样式类 : '" valueExpression="aql:self.eGet(feature.name).assign" candidatesExpression="aql:self.root.eContainer().eContainer().stylelibray.styleclass.name->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eGet(feature.name)">
                    <subModelOperations xsi:type="tool:SetValue" featureName="assign" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
          <controls xsi:type="properties:LabelDescription" labelExpression="-------------------------------------------------自有样式属性---------------------------------------------------------------"/>
        </controls>
        <controls xsi:type="properties:ContainerDescription" name="Special Attribution">
          <controls xsi:type="properties:DynamicMappingForDescription" iterator="feature" iterableExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eClass().eAllStructuralFeatures">
            <ifs predicateExpression="aql:not(feature.name='direction' or feature.name='listDirection' or feature.name='edgeEffect' or feature.name='sticky' or feature.name='scrollable' or feature.name='scrollBar' or feature.name='alignContent' or feature.name='alignContent'  or feature.name='autoPlay'  or feature.name='indicator' or feature.name='vertical' or feature.name='barMode'  or feature.name='loop' )">
              <widget xsi:type="properties:TextDescription" labelExpression="aql:'属性'+feature.name+':'" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='direction'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'水平对齐方式 : '" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','Ltr', 'Rtl', 'Auto'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='listDirection'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'设置子组件的排列方向'" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','Vertical', 'Horizontal'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='edgeEffect'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'设置 List 滑动到边缘时的滑动效果'" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','Spring', 'None'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='sticky'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'设置 ListItem 的吸顶效果'" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','None', 'Normal'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='scrollable'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'设置 Scroll 的滚动方向'" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','Vertical', 'Horizontal','None'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='scrollBar'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'设置 Scroll 的滚动方向'" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','Off', 'On','Auto'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='alignContent'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'设置子组件的对其方式'" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','TopStart', 'Top','TopEnd','Start','Center','End','BottomStart','Bottom','BottomEnd'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='autoPlay'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'是否自动播放'" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','true', 'false'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='indicator'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'是否显示导航点指示器'" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','true', 'false'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='loop'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'是否开启循环显示'" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','true', 'false'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='vertical'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'是否竖直翻页'" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','true', 'false'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='barMode'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'设置 TabBar 的布局模式'" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','Scrollable, 'Fixed'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="绑定参数:" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)" candidatesExpression="aql:self.root.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.root.eContainer()->last().name).eAllContents(arkUIModel::Parameter).name->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="aql:'${'+newValue+'}'"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="2"/>
        </controls>
      </groups>
      <groups name="Widget Attribution Group" labelExpression="Attribution" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription" name="Required attributes">
          <controls xsi:type="properties:TextDescription" labelExpression="aql:'控件名称 : '" valueExpression="aql:self.id">
            <initialOperation>
              <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool:SetValue" featureName="id" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:LabelDescription"/>
          <controls xsi:type="properties:LabelDescription" labelExpression="-------------------------------------------------基本属性---------------------------------------------------------------"/>
          <controls xsi:type="properties:LabelDescription"/>
          <controls xsi:type="properties:DynamicMappingForDescription" iterator="feature" iterableExpression="aql:self.eClass().eAllStructuralFeatures->select(p|p.eClass().name='EAttribute')">
            <ifs predicateExpression="aql:not(feature.name='type' or feature.name='isOn' or feature.name='stateEffect' or feature.name='toggleType' or feature.name='id' or feature.name='widgetType' or feature.name='name' or feature.name='progressType'  or feature.name='showType' )">
              <widget xsi:type="properties:TextDescription" labelExpression="aql:'属性'+feature.name+':'" valueExpression="aql:self.eGet(feature.name)">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='type'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'设置 Button 按钮的显示样式'" valueExpression="aql:self.eGet(feature.name)" candidatesExpression="aql:OrderedSet{'', 'Capsule', 'Normal','Circle'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='stateEffect'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'设置是否开启点击效果'" valueExpression="aql:self.eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','true', 'false'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='isOn'">
              <widget xsi:type="properties:TextDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'开关是否打开'" valueExpression="aql:self.eGet(feature.name)">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='toggleType'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'设置相应的开关状态组件'" valueExpression="aql:self.eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','Switch', 'Checkbox', 'Button'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='progressType'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'设置进度条的样式'" valueExpression="aql:self.eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','Linear', 'Eclipse', 'Ring','ScaleRing','Capsule'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='showType'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'设置进度条的样式'" valueExpression="aql:self.eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','Progress', 'LoadingProgress'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:not(feature.name='id' or feature.name='widgetType' or feature.name='name' )">
              <widget xsi:type="properties:SelectDescription" labelExpression="绑定参数:" valueExpression="aql:self.eGet(feature.name)" candidatesExpression="aql:self.root.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.root.eContainer()->last().name).eAllContents(arkUIModel::Parameter).name->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="aql:'${'+newValue+'}'"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
          <controls xsi:type="properties:LabelDescription" labelExpression="-------------------------------------------------样式绑定---------------------------------------------------------------"/>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="2"/>
        </controls>
        <controls xsi:type="properties:ContainerDescription" name="Style assign">
          <controls xsi:type="properties:DynamicMappingForDescription" iterator="feature" iterableExpression="aql:self.eClass().eAllStructuralFeatures->select(p|p.eClass().name='EReference')">
            <ifs predicateExpression="aql:(feature.name.contains('style'))">
              <widget xsi:type="properties:SelectDescription" name="assignstyle" labelExpression="aql:'绑定样式类 : '" valueExpression="aql:self.eGet(feature.name).assign" candidatesExpression="aql:self.root.eContainer().eContainer().stylelibray.styleclass.name->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eGet(feature.name)">
                    <subModelOperations xsi:type="tool:SetValue" featureName="assign" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
          <controls xsi:type="properties:LabelDescription" labelExpression="-------------------------------------------------自有样式属性---------------------------------------------------------------"/>
        </controls>
        <controls xsi:type="properties:ContainerDescription" name="Special Attribution">
          <controls xsi:type="properties:DynamicMappingForDescription" iterator="feature" iterableExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eClass().eAllStructuralFeatures">
            <ifs predicateExpression="aql:not(feature.name='objectFit' or feature.name='renderMode' or feature.name='textAlign' or feature.name='direction' )">
              <widget xsi:type="properties:TextDescription" labelExpression="aql:'属性'+feature.name+':'" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='direction'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'水平对齐方式 : '" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','Ltr', 'Rtl', 'Auto'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='objectFit'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'设置图片的放缩类型'" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','Cover', 'Contain', 'Fill', 'None', 'ScaleDown'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='renderMode'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'设置图片的渲染模式'" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','Original', 'Template'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:feature.name='textAlign'">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:'属性'+feature.name+':'" helpExpression="aql:'设置文本的对其方式'" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)" candidatesExpression="aql:OrderedSet{'','Start', 'Center', 'End'}" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="var:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="绑定参数:" valueExpression="aql:self.eContents(arkUIModel::StyleClass)->first().eGet(feature.name)" candidatesExpression="aql:self.root.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.root.eContainer()->last().name).eAllContents(arkUIModel::Parameter).name->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::StyleClass)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="aql:'${'+newValue+'}'"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
          <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="2"/>
        </controls>
      </groups>
    </categories>
    <categories name="Event Category">
      <pages name="UIComponent" labelExpression="Event" domainClass="arkUIModel.UIComponent" semanticCandidateExpression="aql:self" groups="//@extensions.9/@categories.1/@groups.0"/>
      <groups name="Event Group" labelExpression="Trigger Event" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription" name="Event">
          <controls xsi:type="properties:DynamicMappingForDescription" iterator="feature" iterableExpression="aql:self.eContents(arkUIModel::Event)->first().eClass().eAllStructuralFeatures">
            <ifs predicateExpression="aql:true">
              <widget xsi:type="properties:SelectDescription" labelExpression="aql:feature.name+'绑定工作流:'" valueExpression="aql:self.eContents(arkUIModel::Event)->first().eGet(feature.name)" candidatesExpression="aql:self.root.eContainer().eContainer().eAllContents(arkUIModel::UILogic)->select(ac | ac.name=self.root.eContainer()->last().name).eAllContents(arkUIModel::WorkFlow).flowName->insertAt(1,'')" candidateDisplayExpression="aql:candidate">
                <initialOperation>
                  <firstModelOperations xsi:type="tool:ChangeContext" browseExpression="aql:self.eContents(arkUIModel::Event)->first()">
                    <subModelOperations xsi:type="tool:SetValue" featureName="aql:feature.name" valueExpression="aql:newValue"/>
                  </firstModelOperations>
                </initialOperation>
              </widget>
            </ifs>
          </controls>
        </controls>
      </groups>
    </categories>
  </extensions>
</description:Group>
